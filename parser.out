Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CALL
    COMMENT
    DO
    EACH
    ELSE
    FUNCTION
    IN
    LBRACK
    RBRACK
    SEP
    WHILE

Grammar

Rule 0     S' -> uz
Rule 1     uz -> line uz
Rule 2     line -> stmt SEMICOL
Rule 3     uz -> error SEMICOL
Rule 4     uz -> <empty>
Rule 5     stmtblock -> LBRACE stmtS RBRACE
Rule 6     stmtS -> stmt SEMICOL stmtS
Rule 7     stmtS -> <empty>
Rule 8     exp -> NAME LPAREN optargs RPAREN
Rule 9     optargs -> args
Rule 10    optargs -> <empty>
Rule 11    args -> exp COMMA args
Rule 12    args -> exp
Rule 13    exp -> exp PLUS exp
Rule 14    exp -> exp MINUS exp
Rule 15    exp -> exp MULTIPLY exp
Rule 16    exp -> exp DIVIDE exp
Rule 17    exp -> exp POWER exp
Rule 18    exp -> exp MODULUS exp
Rule 19    exp -> exp AND exp
Rule 20    exp -> exp OR exp
Rule 21    exp -> exp GT exp
Rule 22    exp -> exp LT exp
Rule 23    exp -> exp GTE exp
Rule 24    exp -> exp LTE exp
Rule 25    exp -> exp EE exp
Rule 26    exp -> exp NE exp
Rule 27    exp -> NAME
Rule 28    exp -> MINUS INT
Rule 29    exp -> MINUS FLOAT
Rule 30    exp -> INT
Rule 31    exp -> FLOAT
Rule 32    exp -> DEC exp
Rule 33    exp -> INC exp
Rule 34    stmt -> exp DEC
Rule 35    stmt -> exp INC
Rule 36    exp -> NOT exp
Rule 37    exp -> TRUE
Rule 38    exp -> FALSE
Rule 39    exp -> STRING
Rule 40    exp -> LPAREN exp RPAREN
Rule 41    stmt -> MAKE NAME
Rule 42    stmt -> MAKE NAME EQUAL exp
Rule 43    stmt -> NAME EQUAL exp
Rule 44    stmt -> IF exp THEN stmtblock
Rule 45    elif -> ELIF exp THEN stmtblock elif
Rule 46    elif -> <empty>
Rule 47    stmt -> FOR NAME EQUAL exp TO INT UNTIL
Rule 48    stmt -> PRINT LPAREN exp RPAREN
Rule 49    stmt -> RETURN exp

Terminals, with rules where they appear

AND                  : 19
CALL                 : 
COMMA                : 11
COMMENT              : 
DEC                  : 32 34
DIVIDE               : 16
DO                   : 
EACH                 : 
EE                   : 25
ELIF                 : 45
ELSE                 : 
EQUAL                : 42 43 47
FALSE                : 38
FLOAT                : 29 31
FOR                  : 47
FUNCTION             : 
GT                   : 21
GTE                  : 23
IF                   : 44
IN                   : 
INC                  : 33 35
INT                  : 28 30 47
LBRACE               : 5
LBRACK               : 
LPAREN               : 8 40 48
LT                   : 22
LTE                  : 24
MAKE                 : 41 42
MINUS                : 14 28 29
MODULUS              : 18
MULTIPLY             : 15
NAME                 : 8 27 41 42 43 47
NE                   : 26
NOT                  : 36
OR                   : 20
PLUS                 : 13
POWER                : 17
PRINT                : 48
RBRACE               : 5
RBRACK               : 
RETURN               : 49
RPAREN               : 8 40 48
SEMICOL              : 2 3 6
SEP                  : 
STRING               : 39
THEN                 : 44 45
TO                   : 47
TRUE                 : 37
UNTIL                : 47
WHILE                : 
error                : 3

Nonterminals, with rules where they appear

args                 : 9 11
elif                 : 45
exp                  : 11 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 32 33 34 35 36 40 42 43 44 45 47 48 49
line                 : 1
optargs              : 8
stmt                 : 2 6
stmtS                : 5 6
stmtblock            : 44 45
uz                   : 1 0

Parsing method: LALR

state 0

    (0) S' -> . uz
    (1) uz -> . line uz
    (3) uz -> . error SEMICOL
    (4) uz -> .
    (2) line -> . stmt SEMICOL
    (34) stmt -> . exp DEC
    (35) stmt -> . exp INC
    (41) stmt -> . MAKE NAME
    (42) stmt -> . MAKE NAME EQUAL exp
    (43) stmt -> . NAME EQUAL exp
    (44) stmt -> . IF exp THEN stmtblock
    (47) stmt -> . FOR NAME EQUAL exp TO INT UNTIL
    (48) stmt -> . PRINT LPAREN exp RPAREN
    (49) stmt -> . RETURN exp
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    error           shift and go to state 3
    $end            reduce using rule 4 (uz -> .)
    MAKE            shift and go to state 8
    NAME            shift and go to state 9
    IF              shift and go to state 10
    FOR             shift and go to state 11
    PRINT           shift and go to state 13
    RETURN          shift and go to state 15
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    uz                             shift and go to state 1
    line                           shift and go to state 2
    stmt                           shift and go to state 4
    exp                            shift and go to state 5

state 1

    (0) S' -> uz .



state 2

    (1) uz -> line . uz
    (1) uz -> . line uz
    (3) uz -> . error SEMICOL
    (4) uz -> .
    (2) line -> . stmt SEMICOL
    (34) stmt -> . exp DEC
    (35) stmt -> . exp INC
    (41) stmt -> . MAKE NAME
    (42) stmt -> . MAKE NAME EQUAL exp
    (43) stmt -> . NAME EQUAL exp
    (44) stmt -> . IF exp THEN stmtblock
    (47) stmt -> . FOR NAME EQUAL exp TO INT UNTIL
    (48) stmt -> . PRINT LPAREN exp RPAREN
    (49) stmt -> . RETURN exp
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    error           shift and go to state 3
    $end            reduce using rule 4 (uz -> .)
    MAKE            shift and go to state 8
    NAME            shift and go to state 9
    IF              shift and go to state 10
    FOR             shift and go to state 11
    PRINT           shift and go to state 13
    RETURN          shift and go to state 15
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    line                           shift and go to state 2
    uz                             shift and go to state 22
    stmt                           shift and go to state 4
    exp                            shift and go to state 5

state 3

    (3) uz -> error . SEMICOL

    SEMICOL         shift and go to state 23


state 4

    (2) line -> stmt . SEMICOL

    SEMICOL         shift and go to state 24


state 5

    (34) stmt -> exp . DEC
    (35) stmt -> exp . INC
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLY exp
    (16) exp -> exp . DIVIDE exp
    (17) exp -> exp . POWER exp
    (18) exp -> exp . MODULUS exp
    (19) exp -> exp . AND exp
    (20) exp -> exp . OR exp
    (21) exp -> exp . GT exp
    (22) exp -> exp . LT exp
    (23) exp -> exp . GTE exp
    (24) exp -> exp . LTE exp
    (25) exp -> exp . EE exp
    (26) exp -> exp . NE exp

    DEC             shift and go to state 25
    INC             shift and go to state 26
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MULTIPLY        shift and go to state 29
    DIVIDE          shift and go to state 30
    POWER           shift and go to state 31
    MODULUS         shift and go to state 32
    AND             shift and go to state 33
    OR              shift and go to state 34
    GT              shift and go to state 35
    LT              shift and go to state 36
    GTE             shift and go to state 37
    LTE             shift and go to state 38
    EE              shift and go to state 39
    NE              shift and go to state 40


state 6

    (32) exp -> DEC . exp
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    NAME            shift and go to state 42
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    exp                            shift and go to state 41

state 7

    (33) exp -> INC . exp
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    NAME            shift and go to state 42
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    exp                            shift and go to state 43

state 8

    (41) stmt -> MAKE . NAME
    (42) stmt -> MAKE . NAME EQUAL exp

    NAME            shift and go to state 44


state 9

    (43) stmt -> NAME . EQUAL exp
    (8) exp -> NAME . LPAREN optargs RPAREN
    (27) exp -> NAME .

    EQUAL           shift and go to state 45
    LPAREN          shift and go to state 46
    DEC             reduce using rule 27 (exp -> NAME .)
    INC             reduce using rule 27 (exp -> NAME .)
    PLUS            reduce using rule 27 (exp -> NAME .)
    MINUS           reduce using rule 27 (exp -> NAME .)
    MULTIPLY        reduce using rule 27 (exp -> NAME .)
    DIVIDE          reduce using rule 27 (exp -> NAME .)
    POWER           reduce using rule 27 (exp -> NAME .)
    MODULUS         reduce using rule 27 (exp -> NAME .)
    AND             reduce using rule 27 (exp -> NAME .)
    OR              reduce using rule 27 (exp -> NAME .)
    GT              reduce using rule 27 (exp -> NAME .)
    LT              reduce using rule 27 (exp -> NAME .)
    GTE             reduce using rule 27 (exp -> NAME .)
    LTE             reduce using rule 27 (exp -> NAME .)
    EE              reduce using rule 27 (exp -> NAME .)
    NE              reduce using rule 27 (exp -> NAME .)


state 10

    (44) stmt -> IF . exp THEN stmtblock
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    NAME            shift and go to state 42
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    exp                            shift and go to state 47

state 11

    (47) stmt -> FOR . NAME EQUAL exp TO INT UNTIL

    NAME            shift and go to state 48


state 12

    (30) exp -> INT .

    DEC             reduce using rule 30 (exp -> INT .)
    INC             reduce using rule 30 (exp -> INT .)
    PLUS            reduce using rule 30 (exp -> INT .)
    MINUS           reduce using rule 30 (exp -> INT .)
    MULTIPLY        reduce using rule 30 (exp -> INT .)
    DIVIDE          reduce using rule 30 (exp -> INT .)
    POWER           reduce using rule 30 (exp -> INT .)
    MODULUS         reduce using rule 30 (exp -> INT .)
    AND             reduce using rule 30 (exp -> INT .)
    OR              reduce using rule 30 (exp -> INT .)
    GT              reduce using rule 30 (exp -> INT .)
    LT              reduce using rule 30 (exp -> INT .)
    GTE             reduce using rule 30 (exp -> INT .)
    LTE             reduce using rule 30 (exp -> INT .)
    EE              reduce using rule 30 (exp -> INT .)
    NE              reduce using rule 30 (exp -> INT .)
    THEN            reduce using rule 30 (exp -> INT .)
    RPAREN          reduce using rule 30 (exp -> INT .)
    SEMICOL         reduce using rule 30 (exp -> INT .)
    COMMA           reduce using rule 30 (exp -> INT .)
    TO              reduce using rule 30 (exp -> INT .)


state 13

    (48) stmt -> PRINT . LPAREN exp RPAREN

    LPAREN          shift and go to state 49


state 14

    (40) exp -> LPAREN . exp RPAREN
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    NAME            shift and go to state 42
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    exp                            shift and go to state 50

state 15

    (49) stmt -> RETURN . exp
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    NAME            shift and go to state 42
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    exp                            shift and go to state 51

state 16

    (28) exp -> MINUS . INT
    (29) exp -> MINUS . FLOAT

    INT             shift and go to state 52
    FLOAT           shift and go to state 53


state 17

    (31) exp -> FLOAT .

    DEC             reduce using rule 31 (exp -> FLOAT .)
    INC             reduce using rule 31 (exp -> FLOAT .)
    PLUS            reduce using rule 31 (exp -> FLOAT .)
    MINUS           reduce using rule 31 (exp -> FLOAT .)
    MULTIPLY        reduce using rule 31 (exp -> FLOAT .)
    DIVIDE          reduce using rule 31 (exp -> FLOAT .)
    POWER           reduce using rule 31 (exp -> FLOAT .)
    MODULUS         reduce using rule 31 (exp -> FLOAT .)
    AND             reduce using rule 31 (exp -> FLOAT .)
    OR              reduce using rule 31 (exp -> FLOAT .)
    GT              reduce using rule 31 (exp -> FLOAT .)
    LT              reduce using rule 31 (exp -> FLOAT .)
    GTE             reduce using rule 31 (exp -> FLOAT .)
    LTE             reduce using rule 31 (exp -> FLOAT .)
    EE              reduce using rule 31 (exp -> FLOAT .)
    NE              reduce using rule 31 (exp -> FLOAT .)
    THEN            reduce using rule 31 (exp -> FLOAT .)
    RPAREN          reduce using rule 31 (exp -> FLOAT .)
    SEMICOL         reduce using rule 31 (exp -> FLOAT .)
    COMMA           reduce using rule 31 (exp -> FLOAT .)
    TO              reduce using rule 31 (exp -> FLOAT .)


state 18

    (36) exp -> NOT . exp
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    NAME            shift and go to state 42
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    exp                            shift and go to state 54

state 19

    (37) exp -> TRUE .

    DEC             reduce using rule 37 (exp -> TRUE .)
    INC             reduce using rule 37 (exp -> TRUE .)
    PLUS            reduce using rule 37 (exp -> TRUE .)
    MINUS           reduce using rule 37 (exp -> TRUE .)
    MULTIPLY        reduce using rule 37 (exp -> TRUE .)
    DIVIDE          reduce using rule 37 (exp -> TRUE .)
    POWER           reduce using rule 37 (exp -> TRUE .)
    MODULUS         reduce using rule 37 (exp -> TRUE .)
    AND             reduce using rule 37 (exp -> TRUE .)
    OR              reduce using rule 37 (exp -> TRUE .)
    GT              reduce using rule 37 (exp -> TRUE .)
    LT              reduce using rule 37 (exp -> TRUE .)
    GTE             reduce using rule 37 (exp -> TRUE .)
    LTE             reduce using rule 37 (exp -> TRUE .)
    EE              reduce using rule 37 (exp -> TRUE .)
    NE              reduce using rule 37 (exp -> TRUE .)
    THEN            reduce using rule 37 (exp -> TRUE .)
    RPAREN          reduce using rule 37 (exp -> TRUE .)
    SEMICOL         reduce using rule 37 (exp -> TRUE .)
    COMMA           reduce using rule 37 (exp -> TRUE .)
    TO              reduce using rule 37 (exp -> TRUE .)


state 20

    (38) exp -> FALSE .

    DEC             reduce using rule 38 (exp -> FALSE .)
    INC             reduce using rule 38 (exp -> FALSE .)
    PLUS            reduce using rule 38 (exp -> FALSE .)
    MINUS           reduce using rule 38 (exp -> FALSE .)
    MULTIPLY        reduce using rule 38 (exp -> FALSE .)
    DIVIDE          reduce using rule 38 (exp -> FALSE .)
    POWER           reduce using rule 38 (exp -> FALSE .)
    MODULUS         reduce using rule 38 (exp -> FALSE .)
    AND             reduce using rule 38 (exp -> FALSE .)
    OR              reduce using rule 38 (exp -> FALSE .)
    GT              reduce using rule 38 (exp -> FALSE .)
    LT              reduce using rule 38 (exp -> FALSE .)
    GTE             reduce using rule 38 (exp -> FALSE .)
    LTE             reduce using rule 38 (exp -> FALSE .)
    EE              reduce using rule 38 (exp -> FALSE .)
    NE              reduce using rule 38 (exp -> FALSE .)
    THEN            reduce using rule 38 (exp -> FALSE .)
    RPAREN          reduce using rule 38 (exp -> FALSE .)
    SEMICOL         reduce using rule 38 (exp -> FALSE .)
    COMMA           reduce using rule 38 (exp -> FALSE .)
    TO              reduce using rule 38 (exp -> FALSE .)


state 21

    (39) exp -> STRING .

    DEC             reduce using rule 39 (exp -> STRING .)
    INC             reduce using rule 39 (exp -> STRING .)
    PLUS            reduce using rule 39 (exp -> STRING .)
    MINUS           reduce using rule 39 (exp -> STRING .)
    MULTIPLY        reduce using rule 39 (exp -> STRING .)
    DIVIDE          reduce using rule 39 (exp -> STRING .)
    POWER           reduce using rule 39 (exp -> STRING .)
    MODULUS         reduce using rule 39 (exp -> STRING .)
    AND             reduce using rule 39 (exp -> STRING .)
    OR              reduce using rule 39 (exp -> STRING .)
    GT              reduce using rule 39 (exp -> STRING .)
    LT              reduce using rule 39 (exp -> STRING .)
    GTE             reduce using rule 39 (exp -> STRING .)
    LTE             reduce using rule 39 (exp -> STRING .)
    EE              reduce using rule 39 (exp -> STRING .)
    NE              reduce using rule 39 (exp -> STRING .)
    THEN            reduce using rule 39 (exp -> STRING .)
    RPAREN          reduce using rule 39 (exp -> STRING .)
    SEMICOL         reduce using rule 39 (exp -> STRING .)
    COMMA           reduce using rule 39 (exp -> STRING .)
    TO              reduce using rule 39 (exp -> STRING .)


state 22

    (1) uz -> line uz .

    $end            reduce using rule 1 (uz -> line uz .)


state 23

    (3) uz -> error SEMICOL .

    $end            reduce using rule 3 (uz -> error SEMICOL .)


state 24

    (2) line -> stmt SEMICOL .

    error           reduce using rule 2 (line -> stmt SEMICOL .)
    MAKE            reduce using rule 2 (line -> stmt SEMICOL .)
    NAME            reduce using rule 2 (line -> stmt SEMICOL .)
    IF              reduce using rule 2 (line -> stmt SEMICOL .)
    FOR             reduce using rule 2 (line -> stmt SEMICOL .)
    PRINT           reduce using rule 2 (line -> stmt SEMICOL .)
    RETURN          reduce using rule 2 (line -> stmt SEMICOL .)
    MINUS           reduce using rule 2 (line -> stmt SEMICOL .)
    INT             reduce using rule 2 (line -> stmt SEMICOL .)
    FLOAT           reduce using rule 2 (line -> stmt SEMICOL .)
    DEC             reduce using rule 2 (line -> stmt SEMICOL .)
    INC             reduce using rule 2 (line -> stmt SEMICOL .)
    NOT             reduce using rule 2 (line -> stmt SEMICOL .)
    TRUE            reduce using rule 2 (line -> stmt SEMICOL .)
    FALSE           reduce using rule 2 (line -> stmt SEMICOL .)
    STRING          reduce using rule 2 (line -> stmt SEMICOL .)
    LPAREN          reduce using rule 2 (line -> stmt SEMICOL .)
    $end            reduce using rule 2 (line -> stmt SEMICOL .)


state 25

    (34) stmt -> exp DEC .

    SEMICOL         reduce using rule 34 (stmt -> exp DEC .)


state 26

    (35) stmt -> exp INC .

    SEMICOL         reduce using rule 35 (stmt -> exp INC .)


state 27

    (13) exp -> exp PLUS . exp
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    NAME            shift and go to state 42
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    exp                            shift and go to state 55

state 28

    (14) exp -> exp MINUS . exp
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    NAME            shift and go to state 42
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    exp                            shift and go to state 56

state 29

    (15) exp -> exp MULTIPLY . exp
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    NAME            shift and go to state 42
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    exp                            shift and go to state 57

state 30

    (16) exp -> exp DIVIDE . exp
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    NAME            shift and go to state 42
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    exp                            shift and go to state 58

state 31

    (17) exp -> exp POWER . exp
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    NAME            shift and go to state 42
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    exp                            shift and go to state 59

state 32

    (18) exp -> exp MODULUS . exp
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    NAME            shift and go to state 42
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    exp                            shift and go to state 60

state 33

    (19) exp -> exp AND . exp
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    NAME            shift and go to state 42
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    exp                            shift and go to state 61

state 34

    (20) exp -> exp OR . exp
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    NAME            shift and go to state 42
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    exp                            shift and go to state 62

state 35

    (21) exp -> exp GT . exp
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    NAME            shift and go to state 42
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    exp                            shift and go to state 63

state 36

    (22) exp -> exp LT . exp
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    NAME            shift and go to state 42
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    exp                            shift and go to state 64

state 37

    (23) exp -> exp GTE . exp
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    NAME            shift and go to state 42
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    exp                            shift and go to state 65

state 38

    (24) exp -> exp LTE . exp
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    NAME            shift and go to state 42
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    exp                            shift and go to state 66

state 39

    (25) exp -> exp EE . exp
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    NAME            shift and go to state 42
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    exp                            shift and go to state 67

state 40

    (26) exp -> exp NE . exp
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    NAME            shift and go to state 42
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    exp                            shift and go to state 68

state 41

    (32) exp -> DEC exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLY exp
    (16) exp -> exp . DIVIDE exp
    (17) exp -> exp . POWER exp
    (18) exp -> exp . MODULUS exp
    (19) exp -> exp . AND exp
    (20) exp -> exp . OR exp
    (21) exp -> exp . GT exp
    (22) exp -> exp . LT exp
    (23) exp -> exp . GTE exp
    (24) exp -> exp . LTE exp
    (25) exp -> exp . EE exp
    (26) exp -> exp . NE exp

    DEC             reduce using rule 32 (exp -> DEC exp .)
    INC             reduce using rule 32 (exp -> DEC exp .)
    POWER           reduce using rule 32 (exp -> DEC exp .)
    MODULUS         reduce using rule 32 (exp -> DEC exp .)
    THEN            reduce using rule 32 (exp -> DEC exp .)
    RPAREN          reduce using rule 32 (exp -> DEC exp .)
    SEMICOL         reduce using rule 32 (exp -> DEC exp .)
    COMMA           reduce using rule 32 (exp -> DEC exp .)
    TO              reduce using rule 32 (exp -> DEC exp .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MULTIPLY        shift and go to state 29
    DIVIDE          shift and go to state 30
    AND             shift and go to state 33
    OR              shift and go to state 34
    GT              shift and go to state 35
    LT              shift and go to state 36
    GTE             shift and go to state 37
    LTE             shift and go to state 38
    EE              shift and go to state 39
    NE              shift and go to state 40

  ! PLUS            [ reduce using rule 32 (exp -> DEC exp .) ]
  ! MINUS           [ reduce using rule 32 (exp -> DEC exp .) ]
  ! MULTIPLY        [ reduce using rule 32 (exp -> DEC exp .) ]
  ! DIVIDE          [ reduce using rule 32 (exp -> DEC exp .) ]
  ! AND             [ reduce using rule 32 (exp -> DEC exp .) ]
  ! OR              [ reduce using rule 32 (exp -> DEC exp .) ]
  ! GT              [ reduce using rule 32 (exp -> DEC exp .) ]
  ! LT              [ reduce using rule 32 (exp -> DEC exp .) ]
  ! GTE             [ reduce using rule 32 (exp -> DEC exp .) ]
  ! LTE             [ reduce using rule 32 (exp -> DEC exp .) ]
  ! EE              [ reduce using rule 32 (exp -> DEC exp .) ]
  ! NE              [ reduce using rule 32 (exp -> DEC exp .) ]
  ! POWER           [ shift and go to state 31 ]
  ! MODULUS         [ shift and go to state 32 ]


state 42

    (8) exp -> NAME . LPAREN optargs RPAREN
    (27) exp -> NAME .

    LPAREN          shift and go to state 46
    PLUS            reduce using rule 27 (exp -> NAME .)
    MINUS           reduce using rule 27 (exp -> NAME .)
    MULTIPLY        reduce using rule 27 (exp -> NAME .)
    DIVIDE          reduce using rule 27 (exp -> NAME .)
    POWER           reduce using rule 27 (exp -> NAME .)
    MODULUS         reduce using rule 27 (exp -> NAME .)
    AND             reduce using rule 27 (exp -> NAME .)
    OR              reduce using rule 27 (exp -> NAME .)
    GT              reduce using rule 27 (exp -> NAME .)
    LT              reduce using rule 27 (exp -> NAME .)
    GTE             reduce using rule 27 (exp -> NAME .)
    LTE             reduce using rule 27 (exp -> NAME .)
    EE              reduce using rule 27 (exp -> NAME .)
    NE              reduce using rule 27 (exp -> NAME .)
    DEC             reduce using rule 27 (exp -> NAME .)
    INC             reduce using rule 27 (exp -> NAME .)
    THEN            reduce using rule 27 (exp -> NAME .)
    RPAREN          reduce using rule 27 (exp -> NAME .)
    SEMICOL         reduce using rule 27 (exp -> NAME .)
    COMMA           reduce using rule 27 (exp -> NAME .)
    TO              reduce using rule 27 (exp -> NAME .)


state 43

    (33) exp -> INC exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLY exp
    (16) exp -> exp . DIVIDE exp
    (17) exp -> exp . POWER exp
    (18) exp -> exp . MODULUS exp
    (19) exp -> exp . AND exp
    (20) exp -> exp . OR exp
    (21) exp -> exp . GT exp
    (22) exp -> exp . LT exp
    (23) exp -> exp . GTE exp
    (24) exp -> exp . LTE exp
    (25) exp -> exp . EE exp
    (26) exp -> exp . NE exp

    DEC             reduce using rule 33 (exp -> INC exp .)
    INC             reduce using rule 33 (exp -> INC exp .)
    POWER           reduce using rule 33 (exp -> INC exp .)
    MODULUS         reduce using rule 33 (exp -> INC exp .)
    THEN            reduce using rule 33 (exp -> INC exp .)
    RPAREN          reduce using rule 33 (exp -> INC exp .)
    SEMICOL         reduce using rule 33 (exp -> INC exp .)
    COMMA           reduce using rule 33 (exp -> INC exp .)
    TO              reduce using rule 33 (exp -> INC exp .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MULTIPLY        shift and go to state 29
    DIVIDE          shift and go to state 30
    AND             shift and go to state 33
    OR              shift and go to state 34
    GT              shift and go to state 35
    LT              shift and go to state 36
    GTE             shift and go to state 37
    LTE             shift and go to state 38
    EE              shift and go to state 39
    NE              shift and go to state 40

  ! PLUS            [ reduce using rule 33 (exp -> INC exp .) ]
  ! MINUS           [ reduce using rule 33 (exp -> INC exp .) ]
  ! MULTIPLY        [ reduce using rule 33 (exp -> INC exp .) ]
  ! DIVIDE          [ reduce using rule 33 (exp -> INC exp .) ]
  ! AND             [ reduce using rule 33 (exp -> INC exp .) ]
  ! OR              [ reduce using rule 33 (exp -> INC exp .) ]
  ! GT              [ reduce using rule 33 (exp -> INC exp .) ]
  ! LT              [ reduce using rule 33 (exp -> INC exp .) ]
  ! GTE             [ reduce using rule 33 (exp -> INC exp .) ]
  ! LTE             [ reduce using rule 33 (exp -> INC exp .) ]
  ! EE              [ reduce using rule 33 (exp -> INC exp .) ]
  ! NE              [ reduce using rule 33 (exp -> INC exp .) ]
  ! POWER           [ shift and go to state 31 ]
  ! MODULUS         [ shift and go to state 32 ]


state 44

    (41) stmt -> MAKE NAME .
    (42) stmt -> MAKE NAME . EQUAL exp

    SEMICOL         reduce using rule 41 (stmt -> MAKE NAME .)
    EQUAL           shift and go to state 69


state 45

    (43) stmt -> NAME EQUAL . exp
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    NAME            shift and go to state 42
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    exp                            shift and go to state 70

state 46

    (8) exp -> NAME LPAREN . optargs RPAREN
    (9) optargs -> . args
    (10) optargs -> .
    (11) args -> . exp COMMA args
    (12) args -> . exp
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    RPAREN          reduce using rule 10 (optargs -> .)
    NAME            shift and go to state 42
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    optargs                        shift and go to state 71
    args                           shift and go to state 72
    exp                            shift and go to state 73

state 47

    (44) stmt -> IF exp . THEN stmtblock
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLY exp
    (16) exp -> exp . DIVIDE exp
    (17) exp -> exp . POWER exp
    (18) exp -> exp . MODULUS exp
    (19) exp -> exp . AND exp
    (20) exp -> exp . OR exp
    (21) exp -> exp . GT exp
    (22) exp -> exp . LT exp
    (23) exp -> exp . GTE exp
    (24) exp -> exp . LTE exp
    (25) exp -> exp . EE exp
    (26) exp -> exp . NE exp

    THEN            shift and go to state 74
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MULTIPLY        shift and go to state 29
    DIVIDE          shift and go to state 30
    POWER           shift and go to state 31
    MODULUS         shift and go to state 32
    AND             shift and go to state 33
    OR              shift and go to state 34
    GT              shift and go to state 35
    LT              shift and go to state 36
    GTE             shift and go to state 37
    LTE             shift and go to state 38
    EE              shift and go to state 39
    NE              shift and go to state 40


state 48

    (47) stmt -> FOR NAME . EQUAL exp TO INT UNTIL

    EQUAL           shift and go to state 75


state 49

    (48) stmt -> PRINT LPAREN . exp RPAREN
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    NAME            shift and go to state 42
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    exp                            shift and go to state 76

state 50

    (40) exp -> LPAREN exp . RPAREN
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLY exp
    (16) exp -> exp . DIVIDE exp
    (17) exp -> exp . POWER exp
    (18) exp -> exp . MODULUS exp
    (19) exp -> exp . AND exp
    (20) exp -> exp . OR exp
    (21) exp -> exp . GT exp
    (22) exp -> exp . LT exp
    (23) exp -> exp . GTE exp
    (24) exp -> exp . LTE exp
    (25) exp -> exp . EE exp
    (26) exp -> exp . NE exp

    RPAREN          shift and go to state 77
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MULTIPLY        shift and go to state 29
    DIVIDE          shift and go to state 30
    POWER           shift and go to state 31
    MODULUS         shift and go to state 32
    AND             shift and go to state 33
    OR              shift and go to state 34
    GT              shift and go to state 35
    LT              shift and go to state 36
    GTE             shift and go to state 37
    LTE             shift and go to state 38
    EE              shift and go to state 39
    NE              shift and go to state 40


state 51

    (49) stmt -> RETURN exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLY exp
    (16) exp -> exp . DIVIDE exp
    (17) exp -> exp . POWER exp
    (18) exp -> exp . MODULUS exp
    (19) exp -> exp . AND exp
    (20) exp -> exp . OR exp
    (21) exp -> exp . GT exp
    (22) exp -> exp . LT exp
    (23) exp -> exp . GTE exp
    (24) exp -> exp . LTE exp
    (25) exp -> exp . EE exp
    (26) exp -> exp . NE exp

    SEMICOL         reduce using rule 49 (stmt -> RETURN exp .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MULTIPLY        shift and go to state 29
    DIVIDE          shift and go to state 30
    POWER           shift and go to state 31
    MODULUS         shift and go to state 32
    AND             shift and go to state 33
    OR              shift and go to state 34
    GT              shift and go to state 35
    LT              shift and go to state 36
    GTE             shift and go to state 37
    LTE             shift and go to state 38
    EE              shift and go to state 39
    NE              shift and go to state 40


state 52

    (28) exp -> MINUS INT .

    DEC             reduce using rule 28 (exp -> MINUS INT .)
    INC             reduce using rule 28 (exp -> MINUS INT .)
    PLUS            reduce using rule 28 (exp -> MINUS INT .)
    MINUS           reduce using rule 28 (exp -> MINUS INT .)
    MULTIPLY        reduce using rule 28 (exp -> MINUS INT .)
    DIVIDE          reduce using rule 28 (exp -> MINUS INT .)
    POWER           reduce using rule 28 (exp -> MINUS INT .)
    MODULUS         reduce using rule 28 (exp -> MINUS INT .)
    AND             reduce using rule 28 (exp -> MINUS INT .)
    OR              reduce using rule 28 (exp -> MINUS INT .)
    GT              reduce using rule 28 (exp -> MINUS INT .)
    LT              reduce using rule 28 (exp -> MINUS INT .)
    GTE             reduce using rule 28 (exp -> MINUS INT .)
    LTE             reduce using rule 28 (exp -> MINUS INT .)
    EE              reduce using rule 28 (exp -> MINUS INT .)
    NE              reduce using rule 28 (exp -> MINUS INT .)
    THEN            reduce using rule 28 (exp -> MINUS INT .)
    RPAREN          reduce using rule 28 (exp -> MINUS INT .)
    SEMICOL         reduce using rule 28 (exp -> MINUS INT .)
    COMMA           reduce using rule 28 (exp -> MINUS INT .)
    TO              reduce using rule 28 (exp -> MINUS INT .)


state 53

    (29) exp -> MINUS FLOAT .

    DEC             reduce using rule 29 (exp -> MINUS FLOAT .)
    INC             reduce using rule 29 (exp -> MINUS FLOAT .)
    PLUS            reduce using rule 29 (exp -> MINUS FLOAT .)
    MINUS           reduce using rule 29 (exp -> MINUS FLOAT .)
    MULTIPLY        reduce using rule 29 (exp -> MINUS FLOAT .)
    DIVIDE          reduce using rule 29 (exp -> MINUS FLOAT .)
    POWER           reduce using rule 29 (exp -> MINUS FLOAT .)
    MODULUS         reduce using rule 29 (exp -> MINUS FLOAT .)
    AND             reduce using rule 29 (exp -> MINUS FLOAT .)
    OR              reduce using rule 29 (exp -> MINUS FLOAT .)
    GT              reduce using rule 29 (exp -> MINUS FLOAT .)
    LT              reduce using rule 29 (exp -> MINUS FLOAT .)
    GTE             reduce using rule 29 (exp -> MINUS FLOAT .)
    LTE             reduce using rule 29 (exp -> MINUS FLOAT .)
    EE              reduce using rule 29 (exp -> MINUS FLOAT .)
    NE              reduce using rule 29 (exp -> MINUS FLOAT .)
    THEN            reduce using rule 29 (exp -> MINUS FLOAT .)
    RPAREN          reduce using rule 29 (exp -> MINUS FLOAT .)
    SEMICOL         reduce using rule 29 (exp -> MINUS FLOAT .)
    COMMA           reduce using rule 29 (exp -> MINUS FLOAT .)
    TO              reduce using rule 29 (exp -> MINUS FLOAT .)


state 54

    (36) exp -> NOT exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLY exp
    (16) exp -> exp . DIVIDE exp
    (17) exp -> exp . POWER exp
    (18) exp -> exp . MODULUS exp
    (19) exp -> exp . AND exp
    (20) exp -> exp . OR exp
    (21) exp -> exp . GT exp
    (22) exp -> exp . LT exp
    (23) exp -> exp . GTE exp
    (24) exp -> exp . LTE exp
    (25) exp -> exp . EE exp
    (26) exp -> exp . NE exp

    DEC             reduce using rule 36 (exp -> NOT exp .)
    INC             reduce using rule 36 (exp -> NOT exp .)
    PLUS            reduce using rule 36 (exp -> NOT exp .)
    MINUS           reduce using rule 36 (exp -> NOT exp .)
    MULTIPLY        reduce using rule 36 (exp -> NOT exp .)
    DIVIDE          reduce using rule 36 (exp -> NOT exp .)
    POWER           reduce using rule 36 (exp -> NOT exp .)
    MODULUS         reduce using rule 36 (exp -> NOT exp .)
    AND             reduce using rule 36 (exp -> NOT exp .)
    OR              reduce using rule 36 (exp -> NOT exp .)
    GT              reduce using rule 36 (exp -> NOT exp .)
    LT              reduce using rule 36 (exp -> NOT exp .)
    GTE             reduce using rule 36 (exp -> NOT exp .)
    LTE             reduce using rule 36 (exp -> NOT exp .)
    EE              reduce using rule 36 (exp -> NOT exp .)
    NE              reduce using rule 36 (exp -> NOT exp .)
    THEN            reduce using rule 36 (exp -> NOT exp .)
    RPAREN          reduce using rule 36 (exp -> NOT exp .)
    SEMICOL         reduce using rule 36 (exp -> NOT exp .)
    COMMA           reduce using rule 36 (exp -> NOT exp .)
    TO              reduce using rule 36 (exp -> NOT exp .)

  ! PLUS            [ shift and go to state 27 ]
  ! MINUS           [ shift and go to state 28 ]
  ! MULTIPLY        [ shift and go to state 29 ]
  ! DIVIDE          [ shift and go to state 30 ]
  ! POWER           [ shift and go to state 31 ]
  ! MODULUS         [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]
  ! GT              [ shift and go to state 35 ]
  ! LT              [ shift and go to state 36 ]
  ! GTE             [ shift and go to state 37 ]
  ! LTE             [ shift and go to state 38 ]
  ! EE              [ shift and go to state 39 ]
  ! NE              [ shift and go to state 40 ]


state 55

    (13) exp -> exp PLUS exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLY exp
    (16) exp -> exp . DIVIDE exp
    (17) exp -> exp . POWER exp
    (18) exp -> exp . MODULUS exp
    (19) exp -> exp . AND exp
    (20) exp -> exp . OR exp
    (21) exp -> exp . GT exp
    (22) exp -> exp . LT exp
    (23) exp -> exp . GTE exp
    (24) exp -> exp . LTE exp
    (25) exp -> exp . EE exp
    (26) exp -> exp . NE exp

    DEC             reduce using rule 13 (exp -> exp PLUS exp .)
    INC             reduce using rule 13 (exp -> exp PLUS exp .)
    PLUS            reduce using rule 13 (exp -> exp PLUS exp .)
    MINUS           reduce using rule 13 (exp -> exp PLUS exp .)
    POWER           reduce using rule 13 (exp -> exp PLUS exp .)
    MODULUS         reduce using rule 13 (exp -> exp PLUS exp .)
    AND             reduce using rule 13 (exp -> exp PLUS exp .)
    OR              reduce using rule 13 (exp -> exp PLUS exp .)
    GT              reduce using rule 13 (exp -> exp PLUS exp .)
    LT              reduce using rule 13 (exp -> exp PLUS exp .)
    GTE             reduce using rule 13 (exp -> exp PLUS exp .)
    LTE             reduce using rule 13 (exp -> exp PLUS exp .)
    EE              reduce using rule 13 (exp -> exp PLUS exp .)
    NE              reduce using rule 13 (exp -> exp PLUS exp .)
    THEN            reduce using rule 13 (exp -> exp PLUS exp .)
    RPAREN          reduce using rule 13 (exp -> exp PLUS exp .)
    SEMICOL         reduce using rule 13 (exp -> exp PLUS exp .)
    COMMA           reduce using rule 13 (exp -> exp PLUS exp .)
    TO              reduce using rule 13 (exp -> exp PLUS exp .)
    MULTIPLY        shift and go to state 29
    DIVIDE          shift and go to state 30

  ! MULTIPLY        [ reduce using rule 13 (exp -> exp PLUS exp .) ]
  ! DIVIDE          [ reduce using rule 13 (exp -> exp PLUS exp .) ]
  ! PLUS            [ shift and go to state 27 ]
  ! MINUS           [ shift and go to state 28 ]
  ! POWER           [ shift and go to state 31 ]
  ! MODULUS         [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]
  ! GT              [ shift and go to state 35 ]
  ! LT              [ shift and go to state 36 ]
  ! GTE             [ shift and go to state 37 ]
  ! LTE             [ shift and go to state 38 ]
  ! EE              [ shift and go to state 39 ]
  ! NE              [ shift and go to state 40 ]


state 56

    (14) exp -> exp MINUS exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLY exp
    (16) exp -> exp . DIVIDE exp
    (17) exp -> exp . POWER exp
    (18) exp -> exp . MODULUS exp
    (19) exp -> exp . AND exp
    (20) exp -> exp . OR exp
    (21) exp -> exp . GT exp
    (22) exp -> exp . LT exp
    (23) exp -> exp . GTE exp
    (24) exp -> exp . LTE exp
    (25) exp -> exp . EE exp
    (26) exp -> exp . NE exp

    DEC             reduce using rule 14 (exp -> exp MINUS exp .)
    INC             reduce using rule 14 (exp -> exp MINUS exp .)
    PLUS            reduce using rule 14 (exp -> exp MINUS exp .)
    MINUS           reduce using rule 14 (exp -> exp MINUS exp .)
    POWER           reduce using rule 14 (exp -> exp MINUS exp .)
    MODULUS         reduce using rule 14 (exp -> exp MINUS exp .)
    AND             reduce using rule 14 (exp -> exp MINUS exp .)
    OR              reduce using rule 14 (exp -> exp MINUS exp .)
    GT              reduce using rule 14 (exp -> exp MINUS exp .)
    LT              reduce using rule 14 (exp -> exp MINUS exp .)
    GTE             reduce using rule 14 (exp -> exp MINUS exp .)
    LTE             reduce using rule 14 (exp -> exp MINUS exp .)
    EE              reduce using rule 14 (exp -> exp MINUS exp .)
    NE              reduce using rule 14 (exp -> exp MINUS exp .)
    THEN            reduce using rule 14 (exp -> exp MINUS exp .)
    RPAREN          reduce using rule 14 (exp -> exp MINUS exp .)
    SEMICOL         reduce using rule 14 (exp -> exp MINUS exp .)
    COMMA           reduce using rule 14 (exp -> exp MINUS exp .)
    TO              reduce using rule 14 (exp -> exp MINUS exp .)
    MULTIPLY        shift and go to state 29
    DIVIDE          shift and go to state 30

  ! MULTIPLY        [ reduce using rule 14 (exp -> exp MINUS exp .) ]
  ! DIVIDE          [ reduce using rule 14 (exp -> exp MINUS exp .) ]
  ! PLUS            [ shift and go to state 27 ]
  ! MINUS           [ shift and go to state 28 ]
  ! POWER           [ shift and go to state 31 ]
  ! MODULUS         [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]
  ! GT              [ shift and go to state 35 ]
  ! LT              [ shift and go to state 36 ]
  ! GTE             [ shift and go to state 37 ]
  ! LTE             [ shift and go to state 38 ]
  ! EE              [ shift and go to state 39 ]
  ! NE              [ shift and go to state 40 ]


state 57

    (15) exp -> exp MULTIPLY exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLY exp
    (16) exp -> exp . DIVIDE exp
    (17) exp -> exp . POWER exp
    (18) exp -> exp . MODULUS exp
    (19) exp -> exp . AND exp
    (20) exp -> exp . OR exp
    (21) exp -> exp . GT exp
    (22) exp -> exp . LT exp
    (23) exp -> exp . GTE exp
    (24) exp -> exp . LTE exp
    (25) exp -> exp . EE exp
    (26) exp -> exp . NE exp

    DEC             reduce using rule 15 (exp -> exp MULTIPLY exp .)
    INC             reduce using rule 15 (exp -> exp MULTIPLY exp .)
    PLUS            reduce using rule 15 (exp -> exp MULTIPLY exp .)
    MINUS           reduce using rule 15 (exp -> exp MULTIPLY exp .)
    MULTIPLY        reduce using rule 15 (exp -> exp MULTIPLY exp .)
    DIVIDE          reduce using rule 15 (exp -> exp MULTIPLY exp .)
    POWER           reduce using rule 15 (exp -> exp MULTIPLY exp .)
    MODULUS         reduce using rule 15 (exp -> exp MULTIPLY exp .)
    AND             reduce using rule 15 (exp -> exp MULTIPLY exp .)
    OR              reduce using rule 15 (exp -> exp MULTIPLY exp .)
    GT              reduce using rule 15 (exp -> exp MULTIPLY exp .)
    LT              reduce using rule 15 (exp -> exp MULTIPLY exp .)
    GTE             reduce using rule 15 (exp -> exp MULTIPLY exp .)
    LTE             reduce using rule 15 (exp -> exp MULTIPLY exp .)
    EE              reduce using rule 15 (exp -> exp MULTIPLY exp .)
    NE              reduce using rule 15 (exp -> exp MULTIPLY exp .)
    THEN            reduce using rule 15 (exp -> exp MULTIPLY exp .)
    RPAREN          reduce using rule 15 (exp -> exp MULTIPLY exp .)
    SEMICOL         reduce using rule 15 (exp -> exp MULTIPLY exp .)
    COMMA           reduce using rule 15 (exp -> exp MULTIPLY exp .)
    TO              reduce using rule 15 (exp -> exp MULTIPLY exp .)

  ! PLUS            [ shift and go to state 27 ]
  ! MINUS           [ shift and go to state 28 ]
  ! MULTIPLY        [ shift and go to state 29 ]
  ! DIVIDE          [ shift and go to state 30 ]
  ! POWER           [ shift and go to state 31 ]
  ! MODULUS         [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]
  ! GT              [ shift and go to state 35 ]
  ! LT              [ shift and go to state 36 ]
  ! GTE             [ shift and go to state 37 ]
  ! LTE             [ shift and go to state 38 ]
  ! EE              [ shift and go to state 39 ]
  ! NE              [ shift and go to state 40 ]


state 58

    (16) exp -> exp DIVIDE exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLY exp
    (16) exp -> exp . DIVIDE exp
    (17) exp -> exp . POWER exp
    (18) exp -> exp . MODULUS exp
    (19) exp -> exp . AND exp
    (20) exp -> exp . OR exp
    (21) exp -> exp . GT exp
    (22) exp -> exp . LT exp
    (23) exp -> exp . GTE exp
    (24) exp -> exp . LTE exp
    (25) exp -> exp . EE exp
    (26) exp -> exp . NE exp

    DEC             reduce using rule 16 (exp -> exp DIVIDE exp .)
    INC             reduce using rule 16 (exp -> exp DIVIDE exp .)
    PLUS            reduce using rule 16 (exp -> exp DIVIDE exp .)
    MINUS           reduce using rule 16 (exp -> exp DIVIDE exp .)
    MULTIPLY        reduce using rule 16 (exp -> exp DIVIDE exp .)
    DIVIDE          reduce using rule 16 (exp -> exp DIVIDE exp .)
    POWER           reduce using rule 16 (exp -> exp DIVIDE exp .)
    MODULUS         reduce using rule 16 (exp -> exp DIVIDE exp .)
    AND             reduce using rule 16 (exp -> exp DIVIDE exp .)
    OR              reduce using rule 16 (exp -> exp DIVIDE exp .)
    GT              reduce using rule 16 (exp -> exp DIVIDE exp .)
    LT              reduce using rule 16 (exp -> exp DIVIDE exp .)
    GTE             reduce using rule 16 (exp -> exp DIVIDE exp .)
    LTE             reduce using rule 16 (exp -> exp DIVIDE exp .)
    EE              reduce using rule 16 (exp -> exp DIVIDE exp .)
    NE              reduce using rule 16 (exp -> exp DIVIDE exp .)
    THEN            reduce using rule 16 (exp -> exp DIVIDE exp .)
    RPAREN          reduce using rule 16 (exp -> exp DIVIDE exp .)
    SEMICOL         reduce using rule 16 (exp -> exp DIVIDE exp .)
    COMMA           reduce using rule 16 (exp -> exp DIVIDE exp .)
    TO              reduce using rule 16 (exp -> exp DIVIDE exp .)

  ! PLUS            [ shift and go to state 27 ]
  ! MINUS           [ shift and go to state 28 ]
  ! MULTIPLY        [ shift and go to state 29 ]
  ! DIVIDE          [ shift and go to state 30 ]
  ! POWER           [ shift and go to state 31 ]
  ! MODULUS         [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]
  ! GT              [ shift and go to state 35 ]
  ! LT              [ shift and go to state 36 ]
  ! GTE             [ shift and go to state 37 ]
  ! LTE             [ shift and go to state 38 ]
  ! EE              [ shift and go to state 39 ]
  ! NE              [ shift and go to state 40 ]


state 59

    (17) exp -> exp POWER exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLY exp
    (16) exp -> exp . DIVIDE exp
    (17) exp -> exp . POWER exp
    (18) exp -> exp . MODULUS exp
    (19) exp -> exp . AND exp
    (20) exp -> exp . OR exp
    (21) exp -> exp . GT exp
    (22) exp -> exp . LT exp
    (23) exp -> exp . GTE exp
    (24) exp -> exp . LTE exp
    (25) exp -> exp . EE exp
    (26) exp -> exp . NE exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for EE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    DEC             reduce using rule 17 (exp -> exp POWER exp .)
    INC             reduce using rule 17 (exp -> exp POWER exp .)
    THEN            reduce using rule 17 (exp -> exp POWER exp .)
    RPAREN          reduce using rule 17 (exp -> exp POWER exp .)
    SEMICOL         reduce using rule 17 (exp -> exp POWER exp .)
    COMMA           reduce using rule 17 (exp -> exp POWER exp .)
    TO              reduce using rule 17 (exp -> exp POWER exp .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MULTIPLY        shift and go to state 29
    DIVIDE          shift and go to state 30
    POWER           shift and go to state 31
    MODULUS         shift and go to state 32
    AND             shift and go to state 33
    OR              shift and go to state 34
    GT              shift and go to state 35
    LT              shift and go to state 36
    GTE             shift and go to state 37
    LTE             shift and go to state 38
    EE              shift and go to state 39
    NE              shift and go to state 40

  ! PLUS            [ reduce using rule 17 (exp -> exp POWER exp .) ]
  ! MINUS           [ reduce using rule 17 (exp -> exp POWER exp .) ]
  ! MULTIPLY        [ reduce using rule 17 (exp -> exp POWER exp .) ]
  ! DIVIDE          [ reduce using rule 17 (exp -> exp POWER exp .) ]
  ! POWER           [ reduce using rule 17 (exp -> exp POWER exp .) ]
  ! MODULUS         [ reduce using rule 17 (exp -> exp POWER exp .) ]
  ! AND             [ reduce using rule 17 (exp -> exp POWER exp .) ]
  ! OR              [ reduce using rule 17 (exp -> exp POWER exp .) ]
  ! GT              [ reduce using rule 17 (exp -> exp POWER exp .) ]
  ! LT              [ reduce using rule 17 (exp -> exp POWER exp .) ]
  ! GTE             [ reduce using rule 17 (exp -> exp POWER exp .) ]
  ! LTE             [ reduce using rule 17 (exp -> exp POWER exp .) ]
  ! EE              [ reduce using rule 17 (exp -> exp POWER exp .) ]
  ! NE              [ reduce using rule 17 (exp -> exp POWER exp .) ]


state 60

    (18) exp -> exp MODULUS exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLY exp
    (16) exp -> exp . DIVIDE exp
    (17) exp -> exp . POWER exp
    (18) exp -> exp . MODULUS exp
    (19) exp -> exp . AND exp
    (20) exp -> exp . OR exp
    (21) exp -> exp . GT exp
    (22) exp -> exp . LT exp
    (23) exp -> exp . GTE exp
    (24) exp -> exp . LTE exp
    (25) exp -> exp . EE exp
    (26) exp -> exp . NE exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for EE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    DEC             reduce using rule 18 (exp -> exp MODULUS exp .)
    INC             reduce using rule 18 (exp -> exp MODULUS exp .)
    THEN            reduce using rule 18 (exp -> exp MODULUS exp .)
    RPAREN          reduce using rule 18 (exp -> exp MODULUS exp .)
    SEMICOL         reduce using rule 18 (exp -> exp MODULUS exp .)
    COMMA           reduce using rule 18 (exp -> exp MODULUS exp .)
    TO              reduce using rule 18 (exp -> exp MODULUS exp .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MULTIPLY        shift and go to state 29
    DIVIDE          shift and go to state 30
    POWER           shift and go to state 31
    MODULUS         shift and go to state 32
    AND             shift and go to state 33
    OR              shift and go to state 34
    GT              shift and go to state 35
    LT              shift and go to state 36
    GTE             shift and go to state 37
    LTE             shift and go to state 38
    EE              shift and go to state 39
    NE              shift and go to state 40

  ! PLUS            [ reduce using rule 18 (exp -> exp MODULUS exp .) ]
  ! MINUS           [ reduce using rule 18 (exp -> exp MODULUS exp .) ]
  ! MULTIPLY        [ reduce using rule 18 (exp -> exp MODULUS exp .) ]
  ! DIVIDE          [ reduce using rule 18 (exp -> exp MODULUS exp .) ]
  ! POWER           [ reduce using rule 18 (exp -> exp MODULUS exp .) ]
  ! MODULUS         [ reduce using rule 18 (exp -> exp MODULUS exp .) ]
  ! AND             [ reduce using rule 18 (exp -> exp MODULUS exp .) ]
  ! OR              [ reduce using rule 18 (exp -> exp MODULUS exp .) ]
  ! GT              [ reduce using rule 18 (exp -> exp MODULUS exp .) ]
  ! LT              [ reduce using rule 18 (exp -> exp MODULUS exp .) ]
  ! GTE             [ reduce using rule 18 (exp -> exp MODULUS exp .) ]
  ! LTE             [ reduce using rule 18 (exp -> exp MODULUS exp .) ]
  ! EE              [ reduce using rule 18 (exp -> exp MODULUS exp .) ]
  ! NE              [ reduce using rule 18 (exp -> exp MODULUS exp .) ]


state 61

    (19) exp -> exp AND exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLY exp
    (16) exp -> exp . DIVIDE exp
    (17) exp -> exp . POWER exp
    (18) exp -> exp . MODULUS exp
    (19) exp -> exp . AND exp
    (20) exp -> exp . OR exp
    (21) exp -> exp . GT exp
    (22) exp -> exp . LT exp
    (23) exp -> exp . GTE exp
    (24) exp -> exp . LTE exp
    (25) exp -> exp . EE exp
    (26) exp -> exp . NE exp

    DEC             reduce using rule 19 (exp -> exp AND exp .)
    INC             reduce using rule 19 (exp -> exp AND exp .)
    POWER           reduce using rule 19 (exp -> exp AND exp .)
    MODULUS         reduce using rule 19 (exp -> exp AND exp .)
    AND             reduce using rule 19 (exp -> exp AND exp .)
    OR              reduce using rule 19 (exp -> exp AND exp .)
    THEN            reduce using rule 19 (exp -> exp AND exp .)
    RPAREN          reduce using rule 19 (exp -> exp AND exp .)
    SEMICOL         reduce using rule 19 (exp -> exp AND exp .)
    COMMA           reduce using rule 19 (exp -> exp AND exp .)
    TO              reduce using rule 19 (exp -> exp AND exp .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MULTIPLY        shift and go to state 29
    DIVIDE          shift and go to state 30
    GT              shift and go to state 35
    LT              shift and go to state 36
    GTE             shift and go to state 37
    LTE             shift and go to state 38
    EE              shift and go to state 39
    NE              shift and go to state 40

  ! PLUS            [ reduce using rule 19 (exp -> exp AND exp .) ]
  ! MINUS           [ reduce using rule 19 (exp -> exp AND exp .) ]
  ! MULTIPLY        [ reduce using rule 19 (exp -> exp AND exp .) ]
  ! DIVIDE          [ reduce using rule 19 (exp -> exp AND exp .) ]
  ! GT              [ reduce using rule 19 (exp -> exp AND exp .) ]
  ! LT              [ reduce using rule 19 (exp -> exp AND exp .) ]
  ! GTE             [ reduce using rule 19 (exp -> exp AND exp .) ]
  ! LTE             [ reduce using rule 19 (exp -> exp AND exp .) ]
  ! EE              [ reduce using rule 19 (exp -> exp AND exp .) ]
  ! NE              [ reduce using rule 19 (exp -> exp AND exp .) ]
  ! POWER           [ shift and go to state 31 ]
  ! MODULUS         [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 62

    (20) exp -> exp OR exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLY exp
    (16) exp -> exp . DIVIDE exp
    (17) exp -> exp . POWER exp
    (18) exp -> exp . MODULUS exp
    (19) exp -> exp . AND exp
    (20) exp -> exp . OR exp
    (21) exp -> exp . GT exp
    (22) exp -> exp . LT exp
    (23) exp -> exp . GTE exp
    (24) exp -> exp . LTE exp
    (25) exp -> exp . EE exp
    (26) exp -> exp . NE exp

    DEC             reduce using rule 20 (exp -> exp OR exp .)
    INC             reduce using rule 20 (exp -> exp OR exp .)
    POWER           reduce using rule 20 (exp -> exp OR exp .)
    MODULUS         reduce using rule 20 (exp -> exp OR exp .)
    OR              reduce using rule 20 (exp -> exp OR exp .)
    THEN            reduce using rule 20 (exp -> exp OR exp .)
    RPAREN          reduce using rule 20 (exp -> exp OR exp .)
    SEMICOL         reduce using rule 20 (exp -> exp OR exp .)
    COMMA           reduce using rule 20 (exp -> exp OR exp .)
    TO              reduce using rule 20 (exp -> exp OR exp .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MULTIPLY        shift and go to state 29
    DIVIDE          shift and go to state 30
    AND             shift and go to state 33
    GT              shift and go to state 35
    LT              shift and go to state 36
    GTE             shift and go to state 37
    LTE             shift and go to state 38
    EE              shift and go to state 39
    NE              shift and go to state 40

  ! PLUS            [ reduce using rule 20 (exp -> exp OR exp .) ]
  ! MINUS           [ reduce using rule 20 (exp -> exp OR exp .) ]
  ! MULTIPLY        [ reduce using rule 20 (exp -> exp OR exp .) ]
  ! DIVIDE          [ reduce using rule 20 (exp -> exp OR exp .) ]
  ! AND             [ reduce using rule 20 (exp -> exp OR exp .) ]
  ! GT              [ reduce using rule 20 (exp -> exp OR exp .) ]
  ! LT              [ reduce using rule 20 (exp -> exp OR exp .) ]
  ! GTE             [ reduce using rule 20 (exp -> exp OR exp .) ]
  ! LTE             [ reduce using rule 20 (exp -> exp OR exp .) ]
  ! EE              [ reduce using rule 20 (exp -> exp OR exp .) ]
  ! NE              [ reduce using rule 20 (exp -> exp OR exp .) ]
  ! POWER           [ shift and go to state 31 ]
  ! MODULUS         [ shift and go to state 32 ]
  ! OR              [ shift and go to state 34 ]


state 63

    (21) exp -> exp GT exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLY exp
    (16) exp -> exp . DIVIDE exp
    (17) exp -> exp . POWER exp
    (18) exp -> exp . MODULUS exp
    (19) exp -> exp . AND exp
    (20) exp -> exp . OR exp
    (21) exp -> exp . GT exp
    (22) exp -> exp . LT exp
    (23) exp -> exp . GTE exp
    (24) exp -> exp . LTE exp
    (25) exp -> exp . EE exp
    (26) exp -> exp . NE exp

    DEC             reduce using rule 21 (exp -> exp GT exp .)
    INC             reduce using rule 21 (exp -> exp GT exp .)
    POWER           reduce using rule 21 (exp -> exp GT exp .)
    MODULUS         reduce using rule 21 (exp -> exp GT exp .)
    AND             reduce using rule 21 (exp -> exp GT exp .)
    OR              reduce using rule 21 (exp -> exp GT exp .)
    GT              reduce using rule 21 (exp -> exp GT exp .)
    LT              reduce using rule 21 (exp -> exp GT exp .)
    GTE             reduce using rule 21 (exp -> exp GT exp .)
    LTE             reduce using rule 21 (exp -> exp GT exp .)
    EE              reduce using rule 21 (exp -> exp GT exp .)
    NE              reduce using rule 21 (exp -> exp GT exp .)
    THEN            reduce using rule 21 (exp -> exp GT exp .)
    RPAREN          reduce using rule 21 (exp -> exp GT exp .)
    SEMICOL         reduce using rule 21 (exp -> exp GT exp .)
    COMMA           reduce using rule 21 (exp -> exp GT exp .)
    TO              reduce using rule 21 (exp -> exp GT exp .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MULTIPLY        shift and go to state 29
    DIVIDE          shift and go to state 30

  ! PLUS            [ reduce using rule 21 (exp -> exp GT exp .) ]
  ! MINUS           [ reduce using rule 21 (exp -> exp GT exp .) ]
  ! MULTIPLY        [ reduce using rule 21 (exp -> exp GT exp .) ]
  ! DIVIDE          [ reduce using rule 21 (exp -> exp GT exp .) ]
  ! POWER           [ shift and go to state 31 ]
  ! MODULUS         [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]
  ! GT              [ shift and go to state 35 ]
  ! LT              [ shift and go to state 36 ]
  ! GTE             [ shift and go to state 37 ]
  ! LTE             [ shift and go to state 38 ]
  ! EE              [ shift and go to state 39 ]
  ! NE              [ shift and go to state 40 ]


state 64

    (22) exp -> exp LT exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLY exp
    (16) exp -> exp . DIVIDE exp
    (17) exp -> exp . POWER exp
    (18) exp -> exp . MODULUS exp
    (19) exp -> exp . AND exp
    (20) exp -> exp . OR exp
    (21) exp -> exp . GT exp
    (22) exp -> exp . LT exp
    (23) exp -> exp . GTE exp
    (24) exp -> exp . LTE exp
    (25) exp -> exp . EE exp
    (26) exp -> exp . NE exp

    DEC             reduce using rule 22 (exp -> exp LT exp .)
    INC             reduce using rule 22 (exp -> exp LT exp .)
    POWER           reduce using rule 22 (exp -> exp LT exp .)
    MODULUS         reduce using rule 22 (exp -> exp LT exp .)
    AND             reduce using rule 22 (exp -> exp LT exp .)
    OR              reduce using rule 22 (exp -> exp LT exp .)
    GT              reduce using rule 22 (exp -> exp LT exp .)
    LT              reduce using rule 22 (exp -> exp LT exp .)
    GTE             reduce using rule 22 (exp -> exp LT exp .)
    LTE             reduce using rule 22 (exp -> exp LT exp .)
    EE              reduce using rule 22 (exp -> exp LT exp .)
    NE              reduce using rule 22 (exp -> exp LT exp .)
    THEN            reduce using rule 22 (exp -> exp LT exp .)
    RPAREN          reduce using rule 22 (exp -> exp LT exp .)
    SEMICOL         reduce using rule 22 (exp -> exp LT exp .)
    COMMA           reduce using rule 22 (exp -> exp LT exp .)
    TO              reduce using rule 22 (exp -> exp LT exp .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MULTIPLY        shift and go to state 29
    DIVIDE          shift and go to state 30

  ! PLUS            [ reduce using rule 22 (exp -> exp LT exp .) ]
  ! MINUS           [ reduce using rule 22 (exp -> exp LT exp .) ]
  ! MULTIPLY        [ reduce using rule 22 (exp -> exp LT exp .) ]
  ! DIVIDE          [ reduce using rule 22 (exp -> exp LT exp .) ]
  ! POWER           [ shift and go to state 31 ]
  ! MODULUS         [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]
  ! GT              [ shift and go to state 35 ]
  ! LT              [ shift and go to state 36 ]
  ! GTE             [ shift and go to state 37 ]
  ! LTE             [ shift and go to state 38 ]
  ! EE              [ shift and go to state 39 ]
  ! NE              [ shift and go to state 40 ]


state 65

    (23) exp -> exp GTE exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLY exp
    (16) exp -> exp . DIVIDE exp
    (17) exp -> exp . POWER exp
    (18) exp -> exp . MODULUS exp
    (19) exp -> exp . AND exp
    (20) exp -> exp . OR exp
    (21) exp -> exp . GT exp
    (22) exp -> exp . LT exp
    (23) exp -> exp . GTE exp
    (24) exp -> exp . LTE exp
    (25) exp -> exp . EE exp
    (26) exp -> exp . NE exp

    DEC             reduce using rule 23 (exp -> exp GTE exp .)
    INC             reduce using rule 23 (exp -> exp GTE exp .)
    POWER           reduce using rule 23 (exp -> exp GTE exp .)
    MODULUS         reduce using rule 23 (exp -> exp GTE exp .)
    AND             reduce using rule 23 (exp -> exp GTE exp .)
    OR              reduce using rule 23 (exp -> exp GTE exp .)
    GT              reduce using rule 23 (exp -> exp GTE exp .)
    LT              reduce using rule 23 (exp -> exp GTE exp .)
    GTE             reduce using rule 23 (exp -> exp GTE exp .)
    LTE             reduce using rule 23 (exp -> exp GTE exp .)
    EE              reduce using rule 23 (exp -> exp GTE exp .)
    NE              reduce using rule 23 (exp -> exp GTE exp .)
    THEN            reduce using rule 23 (exp -> exp GTE exp .)
    RPAREN          reduce using rule 23 (exp -> exp GTE exp .)
    SEMICOL         reduce using rule 23 (exp -> exp GTE exp .)
    COMMA           reduce using rule 23 (exp -> exp GTE exp .)
    TO              reduce using rule 23 (exp -> exp GTE exp .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MULTIPLY        shift and go to state 29
    DIVIDE          shift and go to state 30

  ! PLUS            [ reduce using rule 23 (exp -> exp GTE exp .) ]
  ! MINUS           [ reduce using rule 23 (exp -> exp GTE exp .) ]
  ! MULTIPLY        [ reduce using rule 23 (exp -> exp GTE exp .) ]
  ! DIVIDE          [ reduce using rule 23 (exp -> exp GTE exp .) ]
  ! POWER           [ shift and go to state 31 ]
  ! MODULUS         [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]
  ! GT              [ shift and go to state 35 ]
  ! LT              [ shift and go to state 36 ]
  ! GTE             [ shift and go to state 37 ]
  ! LTE             [ shift and go to state 38 ]
  ! EE              [ shift and go to state 39 ]
  ! NE              [ shift and go to state 40 ]


state 66

    (24) exp -> exp LTE exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLY exp
    (16) exp -> exp . DIVIDE exp
    (17) exp -> exp . POWER exp
    (18) exp -> exp . MODULUS exp
    (19) exp -> exp . AND exp
    (20) exp -> exp . OR exp
    (21) exp -> exp . GT exp
    (22) exp -> exp . LT exp
    (23) exp -> exp . GTE exp
    (24) exp -> exp . LTE exp
    (25) exp -> exp . EE exp
    (26) exp -> exp . NE exp

    DEC             reduce using rule 24 (exp -> exp LTE exp .)
    INC             reduce using rule 24 (exp -> exp LTE exp .)
    POWER           reduce using rule 24 (exp -> exp LTE exp .)
    MODULUS         reduce using rule 24 (exp -> exp LTE exp .)
    AND             reduce using rule 24 (exp -> exp LTE exp .)
    OR              reduce using rule 24 (exp -> exp LTE exp .)
    GT              reduce using rule 24 (exp -> exp LTE exp .)
    LT              reduce using rule 24 (exp -> exp LTE exp .)
    GTE             reduce using rule 24 (exp -> exp LTE exp .)
    LTE             reduce using rule 24 (exp -> exp LTE exp .)
    EE              reduce using rule 24 (exp -> exp LTE exp .)
    NE              reduce using rule 24 (exp -> exp LTE exp .)
    THEN            reduce using rule 24 (exp -> exp LTE exp .)
    RPAREN          reduce using rule 24 (exp -> exp LTE exp .)
    SEMICOL         reduce using rule 24 (exp -> exp LTE exp .)
    COMMA           reduce using rule 24 (exp -> exp LTE exp .)
    TO              reduce using rule 24 (exp -> exp LTE exp .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MULTIPLY        shift and go to state 29
    DIVIDE          shift and go to state 30

  ! PLUS            [ reduce using rule 24 (exp -> exp LTE exp .) ]
  ! MINUS           [ reduce using rule 24 (exp -> exp LTE exp .) ]
  ! MULTIPLY        [ reduce using rule 24 (exp -> exp LTE exp .) ]
  ! DIVIDE          [ reduce using rule 24 (exp -> exp LTE exp .) ]
  ! POWER           [ shift and go to state 31 ]
  ! MODULUS         [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]
  ! GT              [ shift and go to state 35 ]
  ! LT              [ shift and go to state 36 ]
  ! GTE             [ shift and go to state 37 ]
  ! LTE             [ shift and go to state 38 ]
  ! EE              [ shift and go to state 39 ]
  ! NE              [ shift and go to state 40 ]


state 67

    (25) exp -> exp EE exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLY exp
    (16) exp -> exp . DIVIDE exp
    (17) exp -> exp . POWER exp
    (18) exp -> exp . MODULUS exp
    (19) exp -> exp . AND exp
    (20) exp -> exp . OR exp
    (21) exp -> exp . GT exp
    (22) exp -> exp . LT exp
    (23) exp -> exp . GTE exp
    (24) exp -> exp . LTE exp
    (25) exp -> exp . EE exp
    (26) exp -> exp . NE exp

    DEC             reduce using rule 25 (exp -> exp EE exp .)
    INC             reduce using rule 25 (exp -> exp EE exp .)
    POWER           reduce using rule 25 (exp -> exp EE exp .)
    MODULUS         reduce using rule 25 (exp -> exp EE exp .)
    AND             reduce using rule 25 (exp -> exp EE exp .)
    OR              reduce using rule 25 (exp -> exp EE exp .)
    EE              reduce using rule 25 (exp -> exp EE exp .)
    NE              reduce using rule 25 (exp -> exp EE exp .)
    THEN            reduce using rule 25 (exp -> exp EE exp .)
    RPAREN          reduce using rule 25 (exp -> exp EE exp .)
    SEMICOL         reduce using rule 25 (exp -> exp EE exp .)
    COMMA           reduce using rule 25 (exp -> exp EE exp .)
    TO              reduce using rule 25 (exp -> exp EE exp .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MULTIPLY        shift and go to state 29
    DIVIDE          shift and go to state 30
    GT              shift and go to state 35
    LT              shift and go to state 36
    GTE             shift and go to state 37
    LTE             shift and go to state 38

  ! PLUS            [ reduce using rule 25 (exp -> exp EE exp .) ]
  ! MINUS           [ reduce using rule 25 (exp -> exp EE exp .) ]
  ! MULTIPLY        [ reduce using rule 25 (exp -> exp EE exp .) ]
  ! DIVIDE          [ reduce using rule 25 (exp -> exp EE exp .) ]
  ! GT              [ reduce using rule 25 (exp -> exp EE exp .) ]
  ! LT              [ reduce using rule 25 (exp -> exp EE exp .) ]
  ! GTE             [ reduce using rule 25 (exp -> exp EE exp .) ]
  ! LTE             [ reduce using rule 25 (exp -> exp EE exp .) ]
  ! POWER           [ shift and go to state 31 ]
  ! MODULUS         [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]
  ! EE              [ shift and go to state 39 ]
  ! NE              [ shift and go to state 40 ]


state 68

    (26) exp -> exp NE exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLY exp
    (16) exp -> exp . DIVIDE exp
    (17) exp -> exp . POWER exp
    (18) exp -> exp . MODULUS exp
    (19) exp -> exp . AND exp
    (20) exp -> exp . OR exp
    (21) exp -> exp . GT exp
    (22) exp -> exp . LT exp
    (23) exp -> exp . GTE exp
    (24) exp -> exp . LTE exp
    (25) exp -> exp . EE exp
    (26) exp -> exp . NE exp

    DEC             reduce using rule 26 (exp -> exp NE exp .)
    INC             reduce using rule 26 (exp -> exp NE exp .)
    POWER           reduce using rule 26 (exp -> exp NE exp .)
    MODULUS         reduce using rule 26 (exp -> exp NE exp .)
    AND             reduce using rule 26 (exp -> exp NE exp .)
    OR              reduce using rule 26 (exp -> exp NE exp .)
    EE              reduce using rule 26 (exp -> exp NE exp .)
    NE              reduce using rule 26 (exp -> exp NE exp .)
    THEN            reduce using rule 26 (exp -> exp NE exp .)
    RPAREN          reduce using rule 26 (exp -> exp NE exp .)
    SEMICOL         reduce using rule 26 (exp -> exp NE exp .)
    COMMA           reduce using rule 26 (exp -> exp NE exp .)
    TO              reduce using rule 26 (exp -> exp NE exp .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MULTIPLY        shift and go to state 29
    DIVIDE          shift and go to state 30
    GT              shift and go to state 35
    LT              shift and go to state 36
    GTE             shift and go to state 37
    LTE             shift and go to state 38

  ! PLUS            [ reduce using rule 26 (exp -> exp NE exp .) ]
  ! MINUS           [ reduce using rule 26 (exp -> exp NE exp .) ]
  ! MULTIPLY        [ reduce using rule 26 (exp -> exp NE exp .) ]
  ! DIVIDE          [ reduce using rule 26 (exp -> exp NE exp .) ]
  ! GT              [ reduce using rule 26 (exp -> exp NE exp .) ]
  ! LT              [ reduce using rule 26 (exp -> exp NE exp .) ]
  ! GTE             [ reduce using rule 26 (exp -> exp NE exp .) ]
  ! LTE             [ reduce using rule 26 (exp -> exp NE exp .) ]
  ! POWER           [ shift and go to state 31 ]
  ! MODULUS         [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]
  ! EE              [ shift and go to state 39 ]
  ! NE              [ shift and go to state 40 ]


state 69

    (42) stmt -> MAKE NAME EQUAL . exp
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    NAME            shift and go to state 42
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    exp                            shift and go to state 78

state 70

    (43) stmt -> NAME EQUAL exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLY exp
    (16) exp -> exp . DIVIDE exp
    (17) exp -> exp . POWER exp
    (18) exp -> exp . MODULUS exp
    (19) exp -> exp . AND exp
    (20) exp -> exp . OR exp
    (21) exp -> exp . GT exp
    (22) exp -> exp . LT exp
    (23) exp -> exp . GTE exp
    (24) exp -> exp . LTE exp
    (25) exp -> exp . EE exp
    (26) exp -> exp . NE exp

    SEMICOL         reduce using rule 43 (stmt -> NAME EQUAL exp .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MULTIPLY        shift and go to state 29
    DIVIDE          shift and go to state 30
    POWER           shift and go to state 31
    MODULUS         shift and go to state 32
    AND             shift and go to state 33
    OR              shift and go to state 34
    GT              shift and go to state 35
    LT              shift and go to state 36
    GTE             shift and go to state 37
    LTE             shift and go to state 38
    EE              shift and go to state 39
    NE              shift and go to state 40


state 71

    (8) exp -> NAME LPAREN optargs . RPAREN

    RPAREN          shift and go to state 79


state 72

    (9) optargs -> args .

    RPAREN          reduce using rule 9 (optargs -> args .)


state 73

    (11) args -> exp . COMMA args
    (12) args -> exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLY exp
    (16) exp -> exp . DIVIDE exp
    (17) exp -> exp . POWER exp
    (18) exp -> exp . MODULUS exp
    (19) exp -> exp . AND exp
    (20) exp -> exp . OR exp
    (21) exp -> exp . GT exp
    (22) exp -> exp . LT exp
    (23) exp -> exp . GTE exp
    (24) exp -> exp . LTE exp
    (25) exp -> exp . EE exp
    (26) exp -> exp . NE exp

    COMMA           shift and go to state 80
    RPAREN          reduce using rule 12 (args -> exp .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MULTIPLY        shift and go to state 29
    DIVIDE          shift and go to state 30
    POWER           shift and go to state 31
    MODULUS         shift and go to state 32
    AND             shift and go to state 33
    OR              shift and go to state 34
    GT              shift and go to state 35
    LT              shift and go to state 36
    GTE             shift and go to state 37
    LTE             shift and go to state 38
    EE              shift and go to state 39
    NE              shift and go to state 40


state 74

    (44) stmt -> IF exp THEN . stmtblock
    (5) stmtblock -> . LBRACE stmtS RBRACE

    LBRACE          shift and go to state 82

    stmtblock                      shift and go to state 81

state 75

    (47) stmt -> FOR NAME EQUAL . exp TO INT UNTIL
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    NAME            shift and go to state 42
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    exp                            shift and go to state 83

state 76

    (48) stmt -> PRINT LPAREN exp . RPAREN
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLY exp
    (16) exp -> exp . DIVIDE exp
    (17) exp -> exp . POWER exp
    (18) exp -> exp . MODULUS exp
    (19) exp -> exp . AND exp
    (20) exp -> exp . OR exp
    (21) exp -> exp . GT exp
    (22) exp -> exp . LT exp
    (23) exp -> exp . GTE exp
    (24) exp -> exp . LTE exp
    (25) exp -> exp . EE exp
    (26) exp -> exp . NE exp

    RPAREN          shift and go to state 84
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MULTIPLY        shift and go to state 29
    DIVIDE          shift and go to state 30
    POWER           shift and go to state 31
    MODULUS         shift and go to state 32
    AND             shift and go to state 33
    OR              shift and go to state 34
    GT              shift and go to state 35
    LT              shift and go to state 36
    GTE             shift and go to state 37
    LTE             shift and go to state 38
    EE              shift and go to state 39
    NE              shift and go to state 40


state 77

    (40) exp -> LPAREN exp RPAREN .

    DEC             reduce using rule 40 (exp -> LPAREN exp RPAREN .)
    INC             reduce using rule 40 (exp -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 40 (exp -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 40 (exp -> LPAREN exp RPAREN .)
    MULTIPLY        reduce using rule 40 (exp -> LPAREN exp RPAREN .)
    DIVIDE          reduce using rule 40 (exp -> LPAREN exp RPAREN .)
    POWER           reduce using rule 40 (exp -> LPAREN exp RPAREN .)
    MODULUS         reduce using rule 40 (exp -> LPAREN exp RPAREN .)
    AND             reduce using rule 40 (exp -> LPAREN exp RPAREN .)
    OR              reduce using rule 40 (exp -> LPAREN exp RPAREN .)
    GT              reduce using rule 40 (exp -> LPAREN exp RPAREN .)
    LT              reduce using rule 40 (exp -> LPAREN exp RPAREN .)
    GTE             reduce using rule 40 (exp -> LPAREN exp RPAREN .)
    LTE             reduce using rule 40 (exp -> LPAREN exp RPAREN .)
    EE              reduce using rule 40 (exp -> LPAREN exp RPAREN .)
    NE              reduce using rule 40 (exp -> LPAREN exp RPAREN .)
    THEN            reduce using rule 40 (exp -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 40 (exp -> LPAREN exp RPAREN .)
    SEMICOL         reduce using rule 40 (exp -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 40 (exp -> LPAREN exp RPAREN .)
    TO              reduce using rule 40 (exp -> LPAREN exp RPAREN .)


state 78

    (42) stmt -> MAKE NAME EQUAL exp .
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLY exp
    (16) exp -> exp . DIVIDE exp
    (17) exp -> exp . POWER exp
    (18) exp -> exp . MODULUS exp
    (19) exp -> exp . AND exp
    (20) exp -> exp . OR exp
    (21) exp -> exp . GT exp
    (22) exp -> exp . LT exp
    (23) exp -> exp . GTE exp
    (24) exp -> exp . LTE exp
    (25) exp -> exp . EE exp
    (26) exp -> exp . NE exp

    SEMICOL         reduce using rule 42 (stmt -> MAKE NAME EQUAL exp .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MULTIPLY        shift and go to state 29
    DIVIDE          shift and go to state 30
    POWER           shift and go to state 31
    MODULUS         shift and go to state 32
    AND             shift and go to state 33
    OR              shift and go to state 34
    GT              shift and go to state 35
    LT              shift and go to state 36
    GTE             shift and go to state 37
    LTE             shift and go to state 38
    EE              shift and go to state 39
    NE              shift and go to state 40


state 79

    (8) exp -> NAME LPAREN optargs RPAREN .

    DEC             reduce using rule 8 (exp -> NAME LPAREN optargs RPAREN .)
    INC             reduce using rule 8 (exp -> NAME LPAREN optargs RPAREN .)
    PLUS            reduce using rule 8 (exp -> NAME LPAREN optargs RPAREN .)
    MINUS           reduce using rule 8 (exp -> NAME LPAREN optargs RPAREN .)
    MULTIPLY        reduce using rule 8 (exp -> NAME LPAREN optargs RPAREN .)
    DIVIDE          reduce using rule 8 (exp -> NAME LPAREN optargs RPAREN .)
    POWER           reduce using rule 8 (exp -> NAME LPAREN optargs RPAREN .)
    MODULUS         reduce using rule 8 (exp -> NAME LPAREN optargs RPAREN .)
    AND             reduce using rule 8 (exp -> NAME LPAREN optargs RPAREN .)
    OR              reduce using rule 8 (exp -> NAME LPAREN optargs RPAREN .)
    GT              reduce using rule 8 (exp -> NAME LPAREN optargs RPAREN .)
    LT              reduce using rule 8 (exp -> NAME LPAREN optargs RPAREN .)
    GTE             reduce using rule 8 (exp -> NAME LPAREN optargs RPAREN .)
    LTE             reduce using rule 8 (exp -> NAME LPAREN optargs RPAREN .)
    EE              reduce using rule 8 (exp -> NAME LPAREN optargs RPAREN .)
    NE              reduce using rule 8 (exp -> NAME LPAREN optargs RPAREN .)
    THEN            reduce using rule 8 (exp -> NAME LPAREN optargs RPAREN .)
    RPAREN          reduce using rule 8 (exp -> NAME LPAREN optargs RPAREN .)
    SEMICOL         reduce using rule 8 (exp -> NAME LPAREN optargs RPAREN .)
    COMMA           reduce using rule 8 (exp -> NAME LPAREN optargs RPAREN .)
    TO              reduce using rule 8 (exp -> NAME LPAREN optargs RPAREN .)


state 80

    (11) args -> exp COMMA . args
    (11) args -> . exp COMMA args
    (12) args -> . exp
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    NAME            shift and go to state 42
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    exp                            shift and go to state 73
    args                           shift and go to state 85

state 81

    (44) stmt -> IF exp THEN stmtblock .

    SEMICOL         reduce using rule 44 (stmt -> IF exp THEN stmtblock .)


state 82

    (5) stmtblock -> LBRACE . stmtS RBRACE
    (6) stmtS -> . stmt SEMICOL stmtS
    (7) stmtS -> .
    (34) stmt -> . exp DEC
    (35) stmt -> . exp INC
    (41) stmt -> . MAKE NAME
    (42) stmt -> . MAKE NAME EQUAL exp
    (43) stmt -> . NAME EQUAL exp
    (44) stmt -> . IF exp THEN stmtblock
    (47) stmt -> . FOR NAME EQUAL exp TO INT UNTIL
    (48) stmt -> . PRINT LPAREN exp RPAREN
    (49) stmt -> . RETURN exp
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    RBRACE          reduce using rule 7 (stmtS -> .)
    MAKE            shift and go to state 8
    NAME            shift and go to state 9
    IF              shift and go to state 10
    FOR             shift and go to state 11
    PRINT           shift and go to state 13
    RETURN          shift and go to state 15
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    stmtS                          shift and go to state 86
    stmt                           shift and go to state 87
    exp                            shift and go to state 5

state 83

    (47) stmt -> FOR NAME EQUAL exp . TO INT UNTIL
    (13) exp -> exp . PLUS exp
    (14) exp -> exp . MINUS exp
    (15) exp -> exp . MULTIPLY exp
    (16) exp -> exp . DIVIDE exp
    (17) exp -> exp . POWER exp
    (18) exp -> exp . MODULUS exp
    (19) exp -> exp . AND exp
    (20) exp -> exp . OR exp
    (21) exp -> exp . GT exp
    (22) exp -> exp . LT exp
    (23) exp -> exp . GTE exp
    (24) exp -> exp . LTE exp
    (25) exp -> exp . EE exp
    (26) exp -> exp . NE exp

    TO              shift and go to state 88
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    MULTIPLY        shift and go to state 29
    DIVIDE          shift and go to state 30
    POWER           shift and go to state 31
    MODULUS         shift and go to state 32
    AND             shift and go to state 33
    OR              shift and go to state 34
    GT              shift and go to state 35
    LT              shift and go to state 36
    GTE             shift and go to state 37
    LTE             shift and go to state 38
    EE              shift and go to state 39
    NE              shift and go to state 40


state 84

    (48) stmt -> PRINT LPAREN exp RPAREN .

    SEMICOL         reduce using rule 48 (stmt -> PRINT LPAREN exp RPAREN .)


state 85

    (11) args -> exp COMMA args .

    RPAREN          reduce using rule 11 (args -> exp COMMA args .)


state 86

    (5) stmtblock -> LBRACE stmtS . RBRACE

    RBRACE          shift and go to state 89


state 87

    (6) stmtS -> stmt . SEMICOL stmtS

    SEMICOL         shift and go to state 90


state 88

    (47) stmt -> FOR NAME EQUAL exp TO . INT UNTIL

    INT             shift and go to state 91


state 89

    (5) stmtblock -> LBRACE stmtS RBRACE .

    SEMICOL         reduce using rule 5 (stmtblock -> LBRACE stmtS RBRACE .)


state 90

    (6) stmtS -> stmt SEMICOL . stmtS
    (6) stmtS -> . stmt SEMICOL stmtS
    (7) stmtS -> .
    (34) stmt -> . exp DEC
    (35) stmt -> . exp INC
    (41) stmt -> . MAKE NAME
    (42) stmt -> . MAKE NAME EQUAL exp
    (43) stmt -> . NAME EQUAL exp
    (44) stmt -> . IF exp THEN stmtblock
    (47) stmt -> . FOR NAME EQUAL exp TO INT UNTIL
    (48) stmt -> . PRINT LPAREN exp RPAREN
    (49) stmt -> . RETURN exp
    (8) exp -> . NAME LPAREN optargs RPAREN
    (13) exp -> . exp PLUS exp
    (14) exp -> . exp MINUS exp
    (15) exp -> . exp MULTIPLY exp
    (16) exp -> . exp DIVIDE exp
    (17) exp -> . exp POWER exp
    (18) exp -> . exp MODULUS exp
    (19) exp -> . exp AND exp
    (20) exp -> . exp OR exp
    (21) exp -> . exp GT exp
    (22) exp -> . exp LT exp
    (23) exp -> . exp GTE exp
    (24) exp -> . exp LTE exp
    (25) exp -> . exp EE exp
    (26) exp -> . exp NE exp
    (27) exp -> . NAME
    (28) exp -> . MINUS INT
    (29) exp -> . MINUS FLOAT
    (30) exp -> . INT
    (31) exp -> . FLOAT
    (32) exp -> . DEC exp
    (33) exp -> . INC exp
    (36) exp -> . NOT exp
    (37) exp -> . TRUE
    (38) exp -> . FALSE
    (39) exp -> . STRING
    (40) exp -> . LPAREN exp RPAREN

    RBRACE          reduce using rule 7 (stmtS -> .)
    MAKE            shift and go to state 8
    NAME            shift and go to state 9
    IF              shift and go to state 10
    FOR             shift and go to state 11
    PRINT           shift and go to state 13
    RETURN          shift and go to state 15
    MINUS           shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 17
    DEC             shift and go to state 6
    INC             shift and go to state 7
    NOT             shift and go to state 18
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    STRING          shift and go to state 21
    LPAREN          shift and go to state 14

    stmt                           shift and go to state 87
    stmtS                          shift and go to state 92
    exp                            shift and go to state 5

state 91

    (47) stmt -> FOR NAME EQUAL exp TO INT . UNTIL

    UNTIL           shift and go to state 93


state 92

    (6) stmtS -> stmt SEMICOL stmtS .

    RBRACE          reduce using rule 6 (stmtS -> stmt SEMICOL stmtS .)


state 93

    (47) stmt -> FOR NAME EQUAL exp TO INT UNTIL .

    SEMICOL         reduce using rule 47 (stmt -> FOR NAME EQUAL exp TO INT UNTIL .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 59 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 59 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 59 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 59 resolved as shift
WARNING: shift/reduce conflict for POWER in state 59 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 59 resolved as shift
WARNING: shift/reduce conflict for AND in state 59 resolved as shift
WARNING: shift/reduce conflict for OR in state 59 resolved as shift
WARNING: shift/reduce conflict for GT in state 59 resolved as shift
WARNING: shift/reduce conflict for LT in state 59 resolved as shift
WARNING: shift/reduce conflict for GTE in state 59 resolved as shift
WARNING: shift/reduce conflict for LTE in state 59 resolved as shift
WARNING: shift/reduce conflict for EE in state 59 resolved as shift
WARNING: shift/reduce conflict for NE in state 59 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 60 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 60 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 60 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 60 resolved as shift
WARNING: shift/reduce conflict for POWER in state 60 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 60 resolved as shift
WARNING: shift/reduce conflict for AND in state 60 resolved as shift
WARNING: shift/reduce conflict for OR in state 60 resolved as shift
WARNING: shift/reduce conflict for GT in state 60 resolved as shift
WARNING: shift/reduce conflict for LT in state 60 resolved as shift
WARNING: shift/reduce conflict for GTE in state 60 resolved as shift
WARNING: shift/reduce conflict for LTE in state 60 resolved as shift
WARNING: shift/reduce conflict for EE in state 60 resolved as shift
WARNING: shift/reduce conflict for NE in state 60 resolved as shift
