
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'uzleftDECINCleftORleftANDleftEENEnonassocLTGTGTELTEleftPLUSMINUSleftMULTIPLYDIVIDErightNOTAND BREAK CALL CHAR COMMA COMMENT CONTINUE DEC DIVIDE DO DOT EE ELIF ELSE EQUAL FALSE FLOAT FOR FUNCTION GT GTE IF INC INDEX INT LBRACE LBRACK LPAREN LT LTE MAKE MINUS MODULUS MULTICOMMENT MULTIPLY NAME NE NEWL NOT OR PLUS POP POWER PRINT PUSH RBRACE RBRACK RETURN RPAREN SEMICOL SEP SLICE STRING STRUCT THEN TO TRUE UNTIL WHILE\n    uz : line uz\n    \n    line : stmt SEMICOL\n    \n    line : error SEMICOL\n    \n    line : stmt error\n    \n    uz :\n     stmtblock : LBRACE stmtS RBRACE stmtblock : error stmtS RBRACE stmtblock : LBRACE stmtS error stmtblock : LBRACE error RBRACE\n    stmtS : stmt SEMICOL stmtS\n    \n    stmtS : stmt error stmtS\n    \n    stmtS :\n    optargs : argsoptargs : args : exp COMMA args\n            | expexp : NOT exp\n    exp : DEC exp\n        | INC exp\n     \n    exp : exp PLUS exp\n        | exp MINUS exp\n        | exp MULTIPLY exp\n        | exp DIVIDE exp\n        | exp POWER exp\n        | exp MODULUS exp\n    \n    exp : exp AND exp\n        | exp OR exp\n        | exp GT exp\n        | exp LT exp\n        | exp GTE exp\n        | exp LTE exp\n        | exp EE exp\n        | exp NE exp\n    exp : NAMEexp : NAME LPAREN optargs RPARENstmt : CALL NAME LPAREN optargs RPARENstmt : RETURN expstmt : FUNCTION NAME LPAREN funcargs RPAREN stmtblockfuncargs : funcexp COMMA funcargs\n                | funcexpfuncargs : funcexp : NAME\n               | NAME EQUAL expexp : listlist : LBRACK optargs RBRACKstmt : NAME DOT POP LPAREN exp RPARENstmt : NAME DOT PUSH LPAREN exp RPARENexp : NAME DOT INDEX LPAREN exp RPARENexp : NAME DOT SLICE LPAREN exp COMMA exp RPARENstmt : STRUCT NAME SEP structargs SEPstructargs : structexp COMMA structargs\n                  | structexpstructexp : NAME\n                 | NAME EQUAL expstmt : MAKE NAME NAMEstmt : NAME DOT NAME EQUAL expexp : NAME DOT NAME\n    exp : MINUS INT\n        | MINUS FLOAT\n        | INT\n        | FLOAT\n    \n    stmt : exp DEC\n         | exp INC\n    \n    exp : TRUE\n        | FALSE\n    exp : STRINGexp : CHARexp : LPAREN exp RPARENexp : errorstmt : MAKE structargsstmt : NAME EQUAL expstmt : NAME EQUAL error\n    stmt : IF exp THEN stmtblock\n         | IF exp THEN stmtblock elsif ELSE THEN stmtblock\n    \n    elsif : ELIF exp THEN stmtblock elsif\n    \n    elsif :\n    \n    stmt : BREAK\n    \n    stmt : CONTINUE\n    \n    stmt : DO stmtblock WHILE exp\n    stmt : FOR NAME EQUAL exp TO exp UNTIL step stmtblockstep : expstep : stmt : PRINT LPAREN optargs RPAREN'
    
_lr_action_items = {'$end':([0,1,2,31,32,33,34,],[-5,0,-5,-1,-2,-4,-3,]),'error':([0,2,3,7,8,13,14,15,16,17,18,21,23,24,25,26,27,28,29,30,32,33,34,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,68,69,71,72,73,74,78,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,105,106,108,109,110,112,114,116,117,119,120,121,122,123,124,125,129,131,132,133,134,135,136,137,138,139,140,142,144,145,150,151,153,155,156,157,158,159,160,161,162,164,170,171,172,173,174,176,177,179,],[4,4,33,41,41,41,41,41,-77,-78,69,41,-44,-60,-61,-64,-65,-66,-67,41,-2,-4,-3,41,86,-34,-69,-37,-62,-63,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-53,-70,-52,-18,-19,111,41,41,-17,-58,-59,41,-71,-69,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-55,41,69,41,136,139,41,-45,41,41,41,41,41,41,-35,-57,-53,-54,-51,-73,-79,-6,-8,-9,41,41,-7,-83,-36,-56,41,69,-50,41,-10,-11,41,-46,-47,-48,41,-38,69,69,41,-49,-74,-81,69,-80,]),'CALL':([0,2,32,33,34,68,69,138,139,],[5,5,-2,-4,-3,5,5,5,5,]),'RETURN':([0,2,32,33,34,68,69,138,139,],[8,8,-2,-4,-3,8,8,8,8,]),'FUNCTION':([0,2,32,33,34,68,69,138,139,],[10,10,-2,-4,-3,10,10,10,10,]),'NAME':([0,2,5,7,8,10,11,12,13,14,15,19,21,30,32,33,34,36,37,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,68,69,71,78,88,103,104,106,107,109,114,117,119,120,121,122,123,138,139,150,152,155,158,162,172,],[6,6,35,40,40,59,60,61,40,40,40,70,40,40,-2,-4,-3,79,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,105,6,6,40,40,125,126,129,40,129,40,40,40,40,40,40,40,40,6,6,40,126,40,40,40,40,]),'STRUCT':([0,2,32,33,34,68,69,138,139,],[11,11,-2,-4,-3,11,11,11,11,]),'MAKE':([0,2,32,33,34,68,69,138,139,],[12,12,-2,-4,-3,12,12,12,12,]),'IF':([0,2,32,33,34,68,69,138,139,],[15,15,-2,-4,-3,15,15,15,15,]),'BREAK':([0,2,32,33,34,68,69,138,139,],[16,16,-2,-4,-3,16,16,16,16,]),'CONTINUE':([0,2,32,33,34,68,69,138,139,],[17,17,-2,-4,-3,17,17,17,17,]),'DO':([0,2,32,33,34,68,69,138,139,],[18,18,-2,-4,-3,18,18,18,18,]),'FOR':([0,2,32,33,34,68,69,138,139,],[19,19,-2,-4,-3,19,19,19,19,]),'PRINT':([0,2,32,33,34,68,69,138,139,],[20,20,-2,-4,-3,20,20,20,20,]),'NOT':([0,2,7,8,13,14,15,21,30,32,33,34,37,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,68,69,71,78,106,109,114,117,119,120,121,122,123,138,139,150,155,158,162,172,],[21,21,21,21,21,21,21,21,21,-2,-4,-3,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'DEC':([0,2,4,6,7,8,9,13,14,15,21,23,24,25,26,27,28,29,30,32,33,34,37,38,40,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,64,65,68,69,71,72,73,74,78,79,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,106,109,111,114,116,117,119,120,121,122,123,124,125,138,139,150,155,158,161,162,172,173,],[13,13,-69,-34,13,13,43,13,13,13,13,-44,-60,-61,-64,-65,-66,-67,13,-2,-4,-3,13,13,-34,-69,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-18,-19,13,13,13,-17,-58,-59,13,-57,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,13,13,-69,13,-45,13,13,13,13,13,13,-35,-57,13,13,13,13,13,-48,13,13,-49,]),'INC':([0,2,4,6,7,8,9,13,14,15,21,23,24,25,26,27,28,29,30,32,33,34,37,38,40,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,64,65,68,69,71,72,73,74,78,79,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,106,109,111,114,116,117,119,120,121,122,123,124,125,138,139,150,155,158,161,162,172,173,],[14,14,-69,-34,14,14,44,14,14,14,14,-44,-60,-61,-64,-65,-66,-67,14,-2,-4,-3,14,14,-34,-69,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-18,-19,14,14,14,-17,-58,-59,14,-57,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,14,14,-69,14,-45,14,14,14,14,14,14,-35,-57,14,14,14,14,14,-48,14,14,-49,]),'MINUS':([0,2,4,6,7,8,9,13,14,15,21,23,24,25,26,27,28,29,30,32,33,34,37,38,39,40,41,42,45,46,47,48,49,50,51,52,53,54,55,56,57,58,64,65,66,68,69,71,72,73,74,77,78,79,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,106,109,111,114,116,117,119,120,121,122,123,124,125,131,134,138,139,141,145,146,147,148,149,150,155,158,161,162,163,167,168,169,172,173,176,],[22,22,-69,-34,22,22,46,22,22,22,22,-44,-60,-61,-64,-65,-66,-67,22,-2,-4,-3,22,22,46,-34,-69,46,22,22,22,22,22,22,22,22,22,22,22,22,22,22,46,46,46,22,22,22,-17,-58,-59,46,22,-57,46,-69,-68,-20,-21,-22,-23,46,46,46,46,46,46,46,46,46,46,22,22,-69,22,-45,22,22,22,22,22,22,-35,-57,46,46,22,22,46,46,46,46,46,46,22,22,22,-48,22,46,46,46,46,22,-49,46,]),'INT':([0,2,7,8,13,14,15,21,22,30,32,33,34,37,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,68,69,71,78,106,109,114,117,119,120,121,122,123,138,139,150,155,158,162,172,],[24,24,24,24,24,24,24,24,73,24,-2,-4,-3,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'FLOAT':([0,2,7,8,13,14,15,21,22,30,32,33,34,37,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,68,69,71,78,106,109,114,117,119,120,121,122,123,138,139,150,155,158,162,172,],[25,25,25,25,25,25,25,25,74,25,-2,-4,-3,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'TRUE':([0,2,7,8,13,14,15,21,30,32,33,34,37,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,68,69,71,78,106,109,114,117,119,120,121,122,123,138,139,150,155,158,162,172,],[26,26,26,26,26,26,26,26,26,-2,-4,-3,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'FALSE':([0,2,7,8,13,14,15,21,30,32,33,34,37,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,68,69,71,78,106,109,114,117,119,120,121,122,123,138,139,150,155,158,162,172,],[27,27,27,27,27,27,27,27,27,-2,-4,-3,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'STRING':([0,2,7,8,13,14,15,21,30,32,33,34,37,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,68,69,71,78,106,109,114,117,119,120,121,122,123,138,139,150,155,158,162,172,],[28,28,28,28,28,28,28,28,28,-2,-4,-3,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'CHAR':([0,2,7,8,13,14,15,21,30,32,33,34,37,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,68,69,71,78,106,109,114,117,119,120,121,122,123,138,139,150,155,158,162,172,],[29,29,29,29,29,29,29,29,29,-2,-4,-3,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'LPAREN':([0,2,6,7,8,13,14,15,20,21,30,32,33,34,35,37,38,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,68,69,71,78,80,81,82,83,106,109,114,117,119,120,121,122,123,138,139,150,155,158,162,172,],[7,7,37,7,7,7,7,7,71,7,7,-2,-4,-3,78,7,7,37,7,7,7,7,7,7,7,7,7,7,7,7,7,7,103,7,7,7,7,120,121,122,123,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'LBRACK':([0,2,7,8,13,14,15,21,30,32,33,34,37,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,68,69,71,78,106,109,114,117,119,120,121,122,123,138,139,150,155,158,162,172,],[30,30,30,30,30,30,30,30,30,-2,-4,-3,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'SEMICOL':([3,4,16,17,23,24,25,26,27,28,29,40,41,42,43,44,61,62,63,64,65,72,73,74,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,105,112,116,124,125,129,131,132,133,134,135,136,137,140,142,144,145,153,159,160,161,164,173,174,179,],[32,34,-77,-78,-44,-60,-61,-64,-65,-66,-67,-34,-69,-37,-62,-63,-53,-70,-52,-18,-19,-17,-58,-59,-71,-69,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-55,138,-45,-35,-57,-53,-54,-51,-73,-79,-6,-8,-9,-7,-83,-36,-56,-50,-46,-47,-48,-38,-49,-74,-80,]),'PLUS':([4,6,9,23,24,25,26,27,28,29,39,40,41,42,64,65,66,72,73,74,77,79,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,111,116,124,125,131,134,141,145,146,147,148,149,161,163,167,168,169,173,176,],[-69,-34,45,-44,-60,-61,-64,-65,-66,-67,45,-34,-69,45,45,45,45,-17,-58,-59,45,-57,45,-69,-68,-20,-21,-22,-23,45,45,45,45,45,45,45,45,45,45,-69,-45,-35,-57,45,45,45,45,45,45,45,45,-48,45,45,45,45,-49,45,]),'MULTIPLY':([4,6,9,23,24,25,26,27,28,29,39,40,41,42,64,65,66,72,73,74,77,79,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,111,116,124,125,131,134,141,145,146,147,148,149,161,163,167,168,169,173,176,],[-69,-34,47,-44,-60,-61,-64,-65,-66,-67,47,-34,-69,47,47,47,47,-17,-58,-59,47,-57,47,-69,-68,47,47,-22,-23,47,47,47,47,47,47,47,47,47,47,-69,-45,-35,-57,47,47,47,47,47,47,47,47,-48,47,47,47,47,-49,47,]),'DIVIDE':([4,6,9,23,24,25,26,27,28,29,39,40,41,42,64,65,66,72,73,74,77,79,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,111,116,124,125,131,134,141,145,146,147,148,149,161,163,167,168,169,173,176,],[-69,-34,48,-44,-60,-61,-64,-65,-66,-67,48,-34,-69,48,48,48,48,-17,-58,-59,48,-57,48,-69,-68,48,48,-22,-23,48,48,48,48,48,48,48,48,48,48,-69,-45,-35,-57,48,48,48,48,48,48,48,48,-48,48,48,48,48,-49,48,]),'POWER':([4,6,9,23,24,25,26,27,28,29,39,40,41,42,64,65,66,72,73,74,77,79,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,111,116,124,125,131,134,141,145,146,147,148,149,161,163,167,168,169,173,176,],[-69,-34,49,-44,-60,-61,-64,-65,-66,-67,49,-34,-69,49,-18,-19,49,-17,-58,-59,49,-57,49,-69,-68,-20,-21,-22,-23,49,49,-26,-27,-28,-29,-30,-31,-32,-33,-69,-45,-35,-57,49,49,49,49,49,49,49,49,-48,49,49,49,49,-49,49,]),'MODULUS':([4,6,9,23,24,25,26,27,28,29,39,40,41,42,64,65,66,72,73,74,77,79,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,111,116,124,125,131,134,141,145,146,147,148,149,161,163,167,168,169,173,176,],[-69,-34,50,-44,-60,-61,-64,-65,-66,-67,50,-34,-69,50,-18,-19,50,-17,-58,-59,50,-57,50,-69,-68,-20,-21,-22,-23,50,50,-26,-27,-28,-29,-30,-31,-32,-33,-69,-45,-35,-57,50,50,50,50,50,50,50,50,-48,50,50,50,50,-49,50,]),'AND':([4,6,9,23,24,25,26,27,28,29,39,40,41,42,64,65,66,72,73,74,77,79,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,111,116,124,125,131,134,141,145,146,147,148,149,161,163,167,168,169,173,176,],[-69,-34,51,-44,-60,-61,-64,-65,-66,-67,51,-34,-69,51,51,51,51,-17,-58,-59,51,-57,51,-69,-68,-20,-21,-22,-23,51,51,-26,51,-28,-29,-30,-31,-32,-33,-69,-45,-35,-57,51,51,51,51,51,51,51,51,-48,51,51,51,51,-49,51,]),'OR':([4,6,9,23,24,25,26,27,28,29,39,40,41,42,64,65,66,72,73,74,77,79,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,111,116,124,125,131,134,141,145,146,147,148,149,161,163,167,168,169,173,176,],[-69,-34,52,-44,-60,-61,-64,-65,-66,-67,52,-34,-69,52,52,52,52,-17,-58,-59,52,-57,52,-69,-68,-20,-21,-22,-23,52,52,-26,-27,-28,-29,-30,-31,-32,-33,-69,-45,-35,-57,52,52,52,52,52,52,52,52,-48,52,52,52,52,-49,52,]),'GT':([4,6,9,23,24,25,26,27,28,29,39,40,41,42,64,65,66,72,73,74,77,79,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,111,116,124,125,131,134,141,145,146,147,148,149,161,163,167,168,169,173,176,],[-69,-34,53,-44,-60,-61,-64,-65,-66,-67,53,-34,-69,53,53,53,53,-17,-58,-59,53,-57,53,-69,-68,-20,-21,-22,-23,53,53,53,53,None,None,None,None,53,53,-69,-45,-35,-57,53,53,53,53,53,53,53,53,-48,53,53,53,53,-49,53,]),'LT':([4,6,9,23,24,25,26,27,28,29,39,40,41,42,64,65,66,72,73,74,77,79,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,111,116,124,125,131,134,141,145,146,147,148,149,161,163,167,168,169,173,176,],[-69,-34,54,-44,-60,-61,-64,-65,-66,-67,54,-34,-69,54,54,54,54,-17,-58,-59,54,-57,54,-69,-68,-20,-21,-22,-23,54,54,54,54,None,None,None,None,54,54,-69,-45,-35,-57,54,54,54,54,54,54,54,54,-48,54,54,54,54,-49,54,]),'GTE':([4,6,9,23,24,25,26,27,28,29,39,40,41,42,64,65,66,72,73,74,77,79,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,111,116,124,125,131,134,141,145,146,147,148,149,161,163,167,168,169,173,176,],[-69,-34,55,-44,-60,-61,-64,-65,-66,-67,55,-34,-69,55,55,55,55,-17,-58,-59,55,-57,55,-69,-68,-20,-21,-22,-23,55,55,55,55,None,None,None,None,55,55,-69,-45,-35,-57,55,55,55,55,55,55,55,55,-48,55,55,55,55,-49,55,]),'LTE':([4,6,9,23,24,25,26,27,28,29,39,40,41,42,64,65,66,72,73,74,77,79,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,111,116,124,125,131,134,141,145,146,147,148,149,161,163,167,168,169,173,176,],[-69,-34,56,-44,-60,-61,-64,-65,-66,-67,56,-34,-69,56,56,56,56,-17,-58,-59,56,-57,56,-69,-68,-20,-21,-22,-23,56,56,56,56,None,None,None,None,56,56,-69,-45,-35,-57,56,56,56,56,56,56,56,56,-48,56,56,56,56,-49,56,]),'EE':([4,6,9,23,24,25,26,27,28,29,39,40,41,42,64,65,66,72,73,74,77,79,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,111,116,124,125,131,134,141,145,146,147,148,149,161,163,167,168,169,173,176,],[-69,-34,57,-44,-60,-61,-64,-65,-66,-67,57,-34,-69,57,57,57,57,-17,-58,-59,57,-57,57,-69,-68,-20,-21,-22,-23,57,57,57,57,-28,-29,-30,-31,-32,-33,-69,-45,-35,-57,57,57,57,57,57,57,57,57,-48,57,57,57,57,-49,57,]),'NE':([4,6,9,23,24,25,26,27,28,29,39,40,41,42,64,65,66,72,73,74,77,79,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,111,116,124,125,131,134,141,145,146,147,148,149,161,163,167,168,169,173,176,],[-69,-34,58,-44,-60,-61,-64,-65,-66,-67,58,-34,-69,58,58,58,58,-17,-58,-59,58,-57,58,-69,-68,-20,-21,-22,-23,58,58,58,58,-28,-29,-30,-31,-32,-33,-69,-45,-35,-57,58,58,58,58,58,58,58,58,-48,58,58,58,58,-49,58,]),'DOT':([6,40,],[36,88,]),'EQUAL':([6,61,70,79,126,129,],[38,106,114,119,150,106,]),'LBRACE':([18,23,24,25,26,27,28,29,40,41,64,65,72,73,74,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,108,116,124,125,151,161,170,171,172,173,176,177,],[68,-44,-60,-61,-64,-65,-66,-67,-34,-69,-18,-19,-17,-58,-59,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,68,-45,-35,-57,68,-48,68,68,-82,-49,-81,68,]),'RPAREN':([23,24,25,26,27,28,29,37,39,40,41,64,65,71,72,73,74,76,77,78,84,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,115,116,118,124,125,126,127,128,143,146,147,148,152,161,163,165,169,173,],[-44,-60,-61,-64,-65,-66,-67,-14,87,-34,-69,-18,-19,-14,-17,-58,-59,-13,-16,-14,124,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-41,142,-45,144,-35,-57,-42,151,-40,-15,159,160,161,-41,-48,-43,-39,173,-49,]),'THEN':([23,24,25,26,27,28,29,40,41,64,65,66,72,73,74,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,116,124,125,161,166,167,173,],[-44,-60,-61,-64,-65,-66,-67,-34,-69,-18,-19,108,-17,-58,-59,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-45,-35,-57,-48,170,171,-49,]),'COMMA':([23,24,25,26,27,28,29,40,41,61,63,64,65,72,73,74,77,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,116,124,125,126,128,129,131,149,161,163,173,],[-44,-60,-61,-64,-65,-66,-67,-34,-69,-53,107,-18,-19,-17,-58,-59,117,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-45,-35,-57,-42,152,-53,-54,162,-48,-43,-49,]),'RBRACK':([23,24,25,26,27,28,29,30,40,41,64,65,72,73,74,75,76,77,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,116,124,125,143,161,173,],[-44,-60,-61,-64,-65,-66,-67,-14,-34,-69,-18,-19,-17,-58,-59,116,-13,-16,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-45,-35,-57,-15,-48,-49,]),'SEP':([23,24,25,26,27,28,29,40,41,60,63,64,65,72,73,74,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,116,124,125,129,130,131,132,161,173,],[-44,-60,-61,-64,-65,-66,-67,-34,-69,104,-52,-18,-19,-17,-58,-59,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-45,-35,-57,-53,153,-54,-51,-48,-49,]),'TO':([23,24,25,26,27,28,29,40,41,64,65,72,73,74,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,116,124,125,141,161,173,],[-44,-60,-61,-64,-65,-66,-67,-34,-69,-18,-19,-17,-58,-59,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-45,-35,-57,158,-48,-49,]),'UNTIL':([23,24,25,26,27,28,29,40,41,64,65,72,73,74,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,116,124,125,161,168,173,],[-44,-60,-61,-64,-65,-66,-67,-34,-69,-18,-19,-17,-58,-59,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-45,-35,-57,-48,172,-49,]),'POP':([36,],[80,]),'PUSH':([36,],[81,]),'INDEX':([36,88,],[82,82,]),'SLICE':([36,88,],[83,83,]),'WHILE':([67,135,136,137,140,],[109,-6,-8,-9,-7,]),'RBRACE':([68,69,110,111,113,138,139,156,157,],[-12,-12,135,137,140,-12,-12,-10,-11,]),'ELIF':([133,135,136,137,140,175,],[155,-6,-8,-9,-7,155,]),'ELSE':([133,135,136,137,140,154,175,178,],[-76,-6,-8,-9,-7,166,-76,-75,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'uz':([0,2,],[1,31,]),'line':([0,2,],[2,2,]),'stmt':([0,2,68,69,138,139,],[3,3,112,112,112,112,]),'exp':([0,2,7,8,13,14,15,21,30,37,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,68,69,71,78,106,109,114,117,119,120,121,122,123,138,139,150,155,158,162,172,],[9,9,39,42,64,65,66,72,77,77,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,9,9,77,77,131,134,141,77,145,146,147,148,149,9,9,163,167,168,169,176,]),'list':([0,2,7,8,13,14,15,21,30,37,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,68,69,71,78,106,109,114,117,119,120,121,122,123,138,139,150,155,158,162,172,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'structargs':([12,104,107,],[62,130,132,]),'structexp':([12,104,107,],[63,63,63,]),'stmtblock':([18,108,151,170,171,177,],[67,133,164,174,175,179,]),'optargs':([30,37,71,78,],[75,84,115,118,]),'args':([30,37,71,78,117,],[76,76,76,76,143,]),'stmtS':([68,69,138,139,],[110,113,156,157,]),'funcargs':([103,152,],[127,165,]),'funcexp':([103,152,],[128,128,]),'elsif':([133,175,],[154,178,]),'step':([172,],[177,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> uz","S'",1,None,None,None),
  ('uz -> line uz','uz',2,'p_uz','YAPLUZparser.py',46),
  ('line -> stmt SEMICOL','line',2,'p_line_stmt','YAPLUZparser.py',52),
  ('line -> error SEMICOL','line',2,'p_line_stmt_errror','YAPLUZparser.py',58),
  ('line -> stmt error','line',2,'p_line_semicol_errror','YAPLUZparser.py',65),
  ('uz -> <empty>','uz',0,'p_uz_empty','YAPLUZparser.py',72),
  ('stmtblock -> LBRACE stmtS RBRACE','stmtblock',3,'p_stmt_block','YAPLUZparser.py',77),
  ('stmtblock -> error stmtS RBRACE','stmtblock',3,'p_stmt_block_lbrack_error','YAPLUZparser.py',81),
  ('stmtblock -> LBRACE stmtS error','stmtblock',3,'p_stmt_block_rbrack_error','YAPLUZparser.py',85),
  ('stmtblock -> LBRACE error RBRACE','stmtblock',3,'p_stmt_block_stmtS_error','YAPLUZparser.py',89),
  ('stmtS -> stmt SEMICOL stmtS','stmtS',3,'p_stmtS','YAPLUZparser.py',94),
  ('stmtS -> stmt error stmtS','stmtS',3,'p_stmtS_error','YAPLUZparser.py',100),
  ('stmtS -> <empty>','stmtS',0,'p_stmtS_empty','YAPLUZparser.py',107),
  ('optargs -> args','optargs',1,'p_optargs','YAPLUZparser.py',118),
  ('optargs -> <empty>','optargs',0,'p_optargs_empty','YAPLUZparser.py',122),
  ('args -> exp COMMA args','args',3,'p_args','YAPLUZparser.py',126),
  ('args -> exp','args',1,'p_args','YAPLUZparser.py',127),
  ('exp -> NOT exp','exp',2,'p_exp_not','YAPLUZparser.py',134),
  ('exp -> DEC exp','exp',2,'p_exp_leftincdec','YAPLUZparser.py',139),
  ('exp -> INC exp','exp',2,'p_exp_leftincdec','YAPLUZparser.py',140),
  ('exp -> exp PLUS exp','exp',3,'p_exp_bin','YAPLUZparser.py',149),
  ('exp -> exp MINUS exp','exp',3,'p_exp_bin','YAPLUZparser.py',150),
  ('exp -> exp MULTIPLY exp','exp',3,'p_exp_bin','YAPLUZparser.py',151),
  ('exp -> exp DIVIDE exp','exp',3,'p_exp_bin','YAPLUZparser.py',152),
  ('exp -> exp POWER exp','exp',3,'p_exp_bin','YAPLUZparser.py',153),
  ('exp -> exp MODULUS exp','exp',3,'p_exp_bin','YAPLUZparser.py',154),
  ('exp -> exp AND exp','exp',3,'p_exp_compare','YAPLUZparser.py',166),
  ('exp -> exp OR exp','exp',3,'p_exp_compare','YAPLUZparser.py',167),
  ('exp -> exp GT exp','exp',3,'p_exp_compare','YAPLUZparser.py',168),
  ('exp -> exp LT exp','exp',3,'p_exp_compare','YAPLUZparser.py',169),
  ('exp -> exp GTE exp','exp',3,'p_exp_compare','YAPLUZparser.py',170),
  ('exp -> exp LTE exp','exp',3,'p_exp_compare','YAPLUZparser.py',171),
  ('exp -> exp EE exp','exp',3,'p_exp_compare','YAPLUZparser.py',172),
  ('exp -> exp NE exp','exp',3,'p_exp_compare','YAPLUZparser.py',173),
  ('exp -> NAME','exp',1,'p_exp_name','YAPLUZparser.py',179),
  ('exp -> NAME LPAREN optargs RPAREN','exp',4,'p_exp_fcall','YAPLUZparser.py',184),
  ('stmt -> CALL NAME LPAREN optargs RPAREN','stmt',5,'p_stmt_fcall','YAPLUZparser.py',190),
  ('stmt -> RETURN exp','stmt',2,'p_stmt_fret','YAPLUZparser.py',194),
  ('stmt -> FUNCTION NAME LPAREN funcargs RPAREN stmtblock','stmt',6,'p_stmt_funcdef','YAPLUZparser.py',198),
  ('funcargs -> funcexp COMMA funcargs','funcargs',3,'p_funcargs','YAPLUZparser.py',202),
  ('funcargs -> funcexp','funcargs',1,'p_funcargs','YAPLUZparser.py',203),
  ('funcargs -> <empty>','funcargs',0,'p_funcargs_empty','YAPLUZparser.py',210),
  ('funcexp -> NAME','funcexp',1,'p_funcexp','YAPLUZparser.py',214),
  ('funcexp -> NAME EQUAL exp','funcexp',3,'p_funcexp','YAPLUZparser.py',215),
  ('exp -> list','exp',1,'p_exp_list','YAPLUZparser.py',222),
  ('list -> LBRACK optargs RBRACK','list',3,'p_list','YAPLUZparser.py',226),
  ('stmt -> NAME DOT POP LPAREN exp RPAREN','stmt',6,'p_stmt_listpop','YAPLUZparser.py',230),
  ('stmt -> NAME DOT PUSH LPAREN exp RPAREN','stmt',6,'p_stmt_listpush','YAPLUZparser.py',234),
  ('exp -> NAME DOT INDEX LPAREN exp RPAREN','exp',6,'p_exp_listindex','YAPLUZparser.py',238),
  ('exp -> NAME DOT SLICE LPAREN exp COMMA exp RPAREN','exp',8,'p_exp_listslice','YAPLUZparser.py',242),
  ('stmt -> STRUCT NAME SEP structargs SEP','stmt',5,'p_stmt_structcreate','YAPLUZparser.py',247),
  ('structargs -> structexp COMMA structargs','structargs',3,'p_structargs','YAPLUZparser.py',251),
  ('structargs -> structexp','structargs',1,'p_structargs','YAPLUZparser.py',252),
  ('structexp -> NAME','structexp',1,'p_structexp','YAPLUZparser.py',259),
  ('structexp -> NAME EQUAL exp','structexp',3,'p_structexp','YAPLUZparser.py',260),
  ('stmt -> MAKE NAME NAME','stmt',3,'p_stmt_structobj','YAPLUZparser.py',267),
  ('stmt -> NAME DOT NAME EQUAL exp','stmt',5,'p_stmt_structvassign','YAPLUZparser.py',273),
  ('exp -> NAME DOT NAME','exp',3,'p_exp_structvget','YAPLUZparser.py',278),
  ('exp -> MINUS INT','exp',2,'p_exp_num','YAPLUZparser.py',285),
  ('exp -> MINUS FLOAT','exp',2,'p_exp_num','YAPLUZparser.py',286),
  ('exp -> INT','exp',1,'p_exp_num','YAPLUZparser.py',287),
  ('exp -> FLOAT','exp',1,'p_exp_num','YAPLUZparser.py',288),
  ('stmt -> exp DEC','stmt',2,'p_stmt_rightincdec','YAPLUZparser.py',297),
  ('stmt -> exp INC','stmt',2,'p_stmt_rightincdec','YAPLUZparser.py',298),
  ('exp -> TRUE','exp',1,'p_exp_boolean','YAPLUZparser.py',307),
  ('exp -> FALSE','exp',1,'p_exp_boolean','YAPLUZparser.py',308),
  ('exp -> STRING','exp',1,'p_exp_string','YAPLUZparser.py',316),
  ('exp -> CHAR','exp',1,'p_exp_char','YAPLUZparser.py',320),
  ('exp -> LPAREN exp RPAREN','exp',3,'p_exp_group','YAPLUZparser.py',324),
  ('exp -> error','exp',1,'p_exp_error','YAPLUZparser.py',328),
  ('stmt -> MAKE structargs','stmt',2,'p_makevar','YAPLUZparser.py',334),
  ('stmt -> NAME EQUAL exp','stmt',3,'p_assignment','YAPLUZparser.py',338),
  ('stmt -> NAME EQUAL error','stmt',3,'p_assignment_error','YAPLUZparser.py',342),
  ('stmt -> IF exp THEN stmtblock','stmt',4,'p_if','YAPLUZparser.py',348),
  ('stmt -> IF exp THEN stmtblock elsif ELSE THEN stmtblock','stmt',8,'p_if','YAPLUZparser.py',349),
  ('elsif -> ELIF exp THEN stmtblock elsif','elsif',5,'p_elsif','YAPLUZparser.py',362),
  ('elsif -> <empty>','elsif',0,'p_elsif_empty','YAPLUZparser.py',368),
  ('stmt -> BREAK','stmt',1,'p_stmt_break','YAPLUZparser.py',374),
  ('stmt -> CONTINUE','stmt',1,'p_stmt_continue','YAPLUZparser.py',380),
  ('stmt -> DO stmtblock WHILE exp','stmt',4,'p_stmt_while','YAPLUZparser.py',387),
  ('stmt -> FOR NAME EQUAL exp TO exp UNTIL step stmtblock','stmt',9,'p_stmt_for','YAPLUZparser.py',399),
  ('step -> exp','step',1,'p_step','YAPLUZparser.py',403),
  ('step -> <empty>','step',0,'p_step_empty','YAPLUZparser.py',407),
  ('stmt -> PRINT LPAREN optargs RPAREN','stmt',4,'p_stmt_print','YAPLUZparser.py',412),
]
