
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'uzleftDECINCleftORleftANDleftEENEnonassocLTGTGTELTEleftPLUSMINUSleftMULTIPLYDIVIDErightNOTAND CALL CHAR COMMA COMMENT DEC DIVIDE DO EE ELIF ELSE EQUAL FALSE FLOAT FOR FUNCTION GT GTE IF INC INT LBRACE LBRACK LPAREN LT LTE MAKE MINUS MODULUS MULTICOMMENT MULTIPLY NAME NE NOT OR PLUS POWER PRINT RBRACE RBRACK RETURN RPAREN SEMICOL STRING THEN TO TRUE UNTIL WHILE\n    uz : line uz\n    \n    line : stmt SEMICOL\n    uz : error SEMICOL\n    \n    uz :\n     stmtblock : LBRACE stmtS RBRACE stmtblock : LBRACE error RBRACE\n    stmtS : stmt SEMICOL stmtS\n    \n    stmtS : error SEMICOL stmtS\n    \n    stmtS :\n    exp : NAME LPAREN optargs RPARENoptargs : argsoptargs :args : exp COMMA args\n            | exp \n    exp : exp PLUS exp\n        | exp MINUS exp\n        | exp MULTIPLY exp\n        | exp DIVIDE exp\n        | exp POWER exp\n        | exp MODULUS exp\n    \n    exp : exp AND exp\n        | exp OR exp\n        | exp GT exp\n        | exp LT exp\n        | exp GTE exp\n        | exp LTE exp\n        | exp EE exp\n        | exp NE exp\n    exp : NAME\n    exp : MINUS INT\n        | MINUS FLOAT\n        | INT\n        | FLOAT\n    \n    exp : DEC exp\n        | INC exp\n    \n    stmt : exp DEC\n         | exp INC\n    exp : NOT exp\n    exp : TRUE\n        | FALSE\n    exp : STRINGexp : CHARexp : LPAREN exp RPARENstmt : MAKE NAMEstmt : MAKE NAME EQUAL expstmt : NAME EQUAL exp\n    stmt : IF exp THEN stmtblock\n         | IF exp THEN stmtblock elsif ELSE THEN stmtblock\n    \n    elsif : ELIF exp THEN stmtblock elsif\n    \n    elsif :\n    \n    stmt : DO stmtblock WHILE exp\n    stmt : FOR NAME EQUAL exp TO exp UNTIL step stmtblockstep : expstep : stmt : PRINT LPAREN exp RPARENstmt : RETURN exp'
    
_lr_action_items = {'error':([0,2,26,51,93,94,],[3,3,-2,81,100,100,]),'$end':([0,1,2,24,25,26,],[-4,0,-4,-1,-3,-2,]),'MAKE':([0,2,26,51,93,94,],[8,8,-2,8,8,8,]),'NAME':([0,2,6,7,8,10,12,14,15,19,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,48,51,53,73,79,83,88,93,94,99,103,109,],[9,9,44,44,46,44,52,44,44,44,-2,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,9,44,44,44,44,44,9,9,44,44,44,]),'IF':([0,2,26,51,93,94,],[10,10,-2,10,10,10,]),'DO':([0,2,26,51,93,94,],[11,11,-2,11,11,11,]),'FOR':([0,2,26,51,93,94,],[12,12,-2,12,12,12,]),'PRINT':([0,2,26,51,93,94,],[13,13,-2,13,13,13,]),'RETURN':([0,2,26,51,93,94,],[15,15,-2,15,15,15,]),'MINUS':([0,2,5,6,7,9,10,14,15,17,18,19,20,21,22,23,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,79,83,84,85,86,87,88,90,93,94,95,99,103,105,106,109,112,],[16,16,30,16,16,-29,16,16,16,-32,-33,16,-39,-40,-41,-42,-2,16,16,16,16,16,16,16,16,16,16,16,16,16,16,30,-29,30,16,16,30,16,16,30,30,-30,-31,-38,-15,-16,-17,-18,30,30,30,30,30,30,30,30,30,30,16,30,30,16,16,30,-43,30,-10,16,30,16,16,30,16,16,30,30,16,30,]),'INT':([0,2,6,7,10,14,15,16,19,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,48,51,53,73,79,83,88,93,94,99,103,109,],[17,17,17,17,17,17,17,56,17,-2,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'FLOAT':([0,2,6,7,10,14,15,16,19,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,48,51,53,73,79,83,88,93,94,99,103,109,],[18,18,18,18,18,18,18,57,18,-2,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'DEC':([0,2,5,6,7,9,10,14,15,17,18,19,20,21,22,23,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,79,83,85,87,88,93,94,99,103,109,],[6,6,27,6,6,-29,6,6,6,-32,-33,6,-39,-40,-41,-42,-2,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-34,-29,-35,6,6,6,6,-30,-31,-38,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,6,6,6,-43,-10,6,6,6,6,6,6,]),'INC':([0,2,5,6,7,9,10,14,15,17,18,19,20,21,22,23,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,79,83,85,87,88,93,94,99,103,109,],[7,7,28,7,7,-29,7,7,7,-32,-33,7,-39,-40,-41,-42,-2,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-34,-29,-35,7,7,7,7,-30,-31,-38,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,7,7,7,-43,-10,7,7,7,7,7,7,]),'NOT':([0,2,6,7,10,14,15,19,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,48,51,53,73,79,83,88,93,94,99,103,109,],[19,19,19,19,19,19,19,19,-2,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'TRUE':([0,2,6,7,10,14,15,19,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,48,51,53,73,79,83,88,93,94,99,103,109,],[20,20,20,20,20,20,20,20,-2,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'FALSE':([0,2,6,7,10,14,15,19,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,48,51,53,73,79,83,88,93,94,99,103,109,],[21,21,21,21,21,21,21,21,-2,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'STRING':([0,2,6,7,10,14,15,19,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,48,51,53,73,79,83,88,93,94,99,103,109,],[22,22,22,22,22,22,22,22,-2,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'CHAR':([0,2,6,7,10,14,15,19,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,48,51,53,73,79,83,88,93,94,99,103,109,],[23,23,23,23,23,23,23,23,-2,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'LPAREN':([0,2,6,7,9,10,13,14,15,19,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,47,48,51,53,73,79,83,88,93,94,99,103,109,],[14,14,14,14,48,14,53,14,14,14,-2,14,14,14,14,14,14,14,14,14,14,14,14,14,14,48,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'SEMICOL':([3,4,17,18,20,21,22,23,27,28,43,44,45,46,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,81,82,85,86,87,89,90,91,92,96,100,110,115,],[25,26,-32,-33,-39,-40,-41,-42,-36,-37,-34,-29,-35,-44,-56,-30,-31,-38,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-46,93,94,-43,-45,-10,-47,-51,-5,-6,-55,93,-48,-52,]),'PLUS':([5,9,17,18,20,21,22,23,43,44,45,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,77,84,85,86,87,90,95,105,106,112,],[29,-29,-32,-33,-39,-40,-41,-42,29,-29,29,29,29,29,-30,-31,-38,-15,-16,-17,-18,29,29,29,29,29,29,29,29,29,29,29,29,29,-43,29,-10,29,29,29,29,29,]),'MULTIPLY':([5,9,17,18,20,21,22,23,43,44,45,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,77,84,85,86,87,90,95,105,106,112,],[31,-29,-32,-33,-39,-40,-41,-42,31,-29,31,31,31,31,-30,-31,-38,31,31,-17,-18,31,31,31,31,31,31,31,31,31,31,31,31,31,-43,31,-10,31,31,31,31,31,]),'DIVIDE':([5,9,17,18,20,21,22,23,43,44,45,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,77,84,85,86,87,90,95,105,106,112,],[32,-29,-32,-33,-39,-40,-41,-42,32,-29,32,32,32,32,-30,-31,-38,32,32,-17,-18,32,32,32,32,32,32,32,32,32,32,32,32,32,-43,32,-10,32,32,32,32,32,]),'POWER':([5,9,17,18,20,21,22,23,43,44,45,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,77,84,85,86,87,90,95,105,106,112,],[33,-29,-32,-33,-39,-40,-41,-42,-34,-29,-35,33,33,33,-30,-31,-38,-15,-16,-17,-18,33,33,-21,-22,-23,-24,-25,-26,-27,-28,33,33,33,-43,33,-10,33,33,33,33,33,]),'MODULUS':([5,9,17,18,20,21,22,23,43,44,45,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,77,84,85,86,87,90,95,105,106,112,],[34,-29,-32,-33,-39,-40,-41,-42,-34,-29,-35,34,34,34,-30,-31,-38,-15,-16,-17,-18,34,34,-21,-22,-23,-24,-25,-26,-27,-28,34,34,34,-43,34,-10,34,34,34,34,34,]),'AND':([5,9,17,18,20,21,22,23,43,44,45,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,77,84,85,86,87,90,95,105,106,112,],[35,-29,-32,-33,-39,-40,-41,-42,35,-29,35,35,35,35,-30,-31,-38,-15,-16,-17,-18,35,35,-21,35,-23,-24,-25,-26,-27,-28,35,35,35,-43,35,-10,35,35,35,35,35,]),'OR':([5,9,17,18,20,21,22,23,43,44,45,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,77,84,85,86,87,90,95,105,106,112,],[36,-29,-32,-33,-39,-40,-41,-42,36,-29,36,36,36,36,-30,-31,-38,-15,-16,-17,-18,36,36,-21,-22,-23,-24,-25,-26,-27,-28,36,36,36,-43,36,-10,36,36,36,36,36,]),'GT':([5,9,17,18,20,21,22,23,43,44,45,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,77,84,85,86,87,90,95,105,106,112,],[37,-29,-32,-33,-39,-40,-41,-42,37,-29,37,37,37,37,-30,-31,-38,-15,-16,-17,-18,37,37,37,37,None,None,None,None,37,37,37,37,37,-43,37,-10,37,37,37,37,37,]),'LT':([5,9,17,18,20,21,22,23,43,44,45,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,77,84,85,86,87,90,95,105,106,112,],[38,-29,-32,-33,-39,-40,-41,-42,38,-29,38,38,38,38,-30,-31,-38,-15,-16,-17,-18,38,38,38,38,None,None,None,None,38,38,38,38,38,-43,38,-10,38,38,38,38,38,]),'GTE':([5,9,17,18,20,21,22,23,43,44,45,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,77,84,85,86,87,90,95,105,106,112,],[39,-29,-32,-33,-39,-40,-41,-42,39,-29,39,39,39,39,-30,-31,-38,-15,-16,-17,-18,39,39,39,39,None,None,None,None,39,39,39,39,39,-43,39,-10,39,39,39,39,39,]),'LTE':([5,9,17,18,20,21,22,23,43,44,45,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,77,84,85,86,87,90,95,105,106,112,],[40,-29,-32,-33,-39,-40,-41,-42,40,-29,40,40,40,40,-30,-31,-38,-15,-16,-17,-18,40,40,40,40,None,None,None,None,40,40,40,40,40,-43,40,-10,40,40,40,40,40,]),'EE':([5,9,17,18,20,21,22,23,43,44,45,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,77,84,85,86,87,90,95,105,106,112,],[41,-29,-32,-33,-39,-40,-41,-42,41,-29,41,41,41,41,-30,-31,-38,-15,-16,-17,-18,41,41,41,41,-23,-24,-25,-26,-27,-28,41,41,41,-43,41,-10,41,41,41,41,41,]),'NE':([5,9,17,18,20,21,22,23,43,44,45,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,77,84,85,86,87,90,95,105,106,112,],[42,-29,-32,-33,-39,-40,-41,-42,42,-29,42,42,42,42,-30,-31,-38,-15,-16,-17,-18,42,42,42,42,-23,-24,-25,-26,-27,-28,42,42,42,-43,42,-10,42,42,42,42,42,]),'EQUAL':([9,46,52,],[47,73,83,]),'LBRACE':([11,17,18,20,21,22,23,43,44,45,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,78,85,87,107,108,109,112,113,],[51,-32,-33,-39,-40,-41,-42,-34,-29,-35,-30,-31,-38,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,51,-43,-10,51,51,-54,-53,51,]),'THEN':([17,18,20,21,22,23,43,44,45,49,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,85,87,104,105,],[-32,-33,-39,-40,-41,-42,-34,-29,-35,78,-30,-31,-38,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-43,-10,107,108,]),'RPAREN':([17,18,20,21,22,23,43,44,45,48,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,77,84,85,87,97,],[-32,-33,-39,-40,-41,-42,-34,-29,-35,-12,85,-30,-31,-38,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,87,-11,-14,96,-43,-10,-13,]),'COMMA':([17,18,20,21,22,23,43,44,45,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,85,87,],[-32,-33,-39,-40,-41,-42,-34,-29,-35,-30,-31,-38,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,88,-43,-10,]),'TO':([17,18,20,21,22,23,43,44,45,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,85,87,95,],[-32,-33,-39,-40,-41,-42,-34,-29,-35,-30,-31,-38,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-43,-10,103,]),'UNTIL':([17,18,20,21,22,23,43,44,45,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,85,87,106,],[-32,-33,-39,-40,-41,-42,-34,-29,-35,-30,-31,-38,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-43,-10,109,]),'WHILE':([50,91,92,],[79,-5,-6,]),'RBRACE':([51,80,81,93,94,101,102,],[-9,91,92,-9,-9,-8,-7,]),'ELIF':([89,91,92,111,],[99,-5,-6,99,]),'ELSE':([89,91,92,98,111,114,],[-50,-5,-6,104,-50,-49,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'uz':([0,2,],[1,24,]),'line':([0,2,],[2,2,]),'stmt':([0,2,51,93,94,],[4,4,82,82,82,]),'exp':([0,2,6,7,10,14,15,19,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,48,51,53,73,79,83,88,93,94,99,103,109,],[5,5,43,45,49,54,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,77,5,84,86,90,95,77,5,5,105,106,112,]),'stmtblock':([11,78,107,108,113,],[50,89,110,111,115,]),'optargs':([48,],[75,]),'args':([48,88,],[76,97,]),'stmtS':([51,93,94,],[80,101,102,]),'elsif':([89,111,],[98,114,]),'step':([109,],[113,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> uz","S'",1,None,None,None),
  ('uz -> line uz','uz',2,'p_uz','YAPLUZparser.py',43),
  ('line -> stmt SEMICOL','line',2,'p_line_stmt','YAPLUZparser.py',49),
  ('uz -> error SEMICOL','uz',2,'p_uz_stmt_error','YAPLUZparser.py',59),
  ('uz -> <empty>','uz',0,'p_uz_empty','YAPLUZparser.py',65),
  ('stmtblock -> LBRACE stmtS RBRACE','stmtblock',3,'p_stmt_block','YAPLUZparser.py',70),
  ('stmtblock -> LBRACE error RBRACE','stmtblock',3,'p_stmt_block_error','YAPLUZparser.py',85),
  ('stmtS -> stmt SEMICOL stmtS','stmtS',3,'p_stmtS','YAPLUZparser.py',90),
  ('stmtS -> error SEMICOL stmtS','stmtS',3,'p_stmtS_error','YAPLUZparser.py',96),
  ('stmtS -> <empty>','stmtS',0,'p_stmtS_empty','YAPLUZparser.py',102),
  ('exp -> NAME LPAREN optargs RPAREN','exp',4,'p_exp_call','YAPLUZparser.py',113),
  ('optargs -> args','optargs',1,'p_optargs','YAPLUZparser.py',117),
  ('optargs -> <empty>','optargs',0,'p_optargs_empty','YAPLUZparser.py',121),
  ('args -> exp COMMA args','args',3,'p_args','YAPLUZparser.py',125),
  ('args -> exp','args',1,'p_args','YAPLUZparser.py',126),
  ('exp -> exp PLUS exp','exp',3,'p_exp_bin','YAPLUZparser.py',134),
  ('exp -> exp MINUS exp','exp',3,'p_exp_bin','YAPLUZparser.py',135),
  ('exp -> exp MULTIPLY exp','exp',3,'p_exp_bin','YAPLUZparser.py',136),
  ('exp -> exp DIVIDE exp','exp',3,'p_exp_bin','YAPLUZparser.py',137),
  ('exp -> exp POWER exp','exp',3,'p_exp_bin','YAPLUZparser.py',138),
  ('exp -> exp MODULUS exp','exp',3,'p_exp_bin','YAPLUZparser.py',139),
  ('exp -> exp AND exp','exp',3,'p_exp_compare','YAPLUZparser.py',145),
  ('exp -> exp OR exp','exp',3,'p_exp_compare','YAPLUZparser.py',146),
  ('exp -> exp GT exp','exp',3,'p_exp_compare','YAPLUZparser.py',147),
  ('exp -> exp LT exp','exp',3,'p_exp_compare','YAPLUZparser.py',148),
  ('exp -> exp GTE exp','exp',3,'p_exp_compare','YAPLUZparser.py',149),
  ('exp -> exp LTE exp','exp',3,'p_exp_compare','YAPLUZparser.py',150),
  ('exp -> exp EE exp','exp',3,'p_exp_compare','YAPLUZparser.py',151),
  ('exp -> exp NE exp','exp',3,'p_exp_compare','YAPLUZparser.py',152),
  ('exp -> NAME','exp',1,'p_exp_name','YAPLUZparser.py',161),
  ('exp -> MINUS INT','exp',2,'p_exp_num','YAPLUZparser.py',166),
  ('exp -> MINUS FLOAT','exp',2,'p_exp_num','YAPLUZparser.py',167),
  ('exp -> INT','exp',1,'p_exp_num','YAPLUZparser.py',168),
  ('exp -> FLOAT','exp',1,'p_exp_num','YAPLUZparser.py',169),
  ('exp -> DEC exp','exp',2,'p_exp_leftincdec','YAPLUZparser.py',178),
  ('exp -> INC exp','exp',2,'p_exp_leftincdec','YAPLUZparser.py',179),
  ('stmt -> exp DEC','stmt',2,'p_stmt_rightincdec','YAPLUZparser.py',188),
  ('stmt -> exp INC','stmt',2,'p_stmt_rightincdec','YAPLUZparser.py',189),
  ('exp -> NOT exp','exp',2,'p_exp_not','YAPLUZparser.py',197),
  ('exp -> TRUE','exp',1,'p_exp_boolean','YAPLUZparser.py',202),
  ('exp -> FALSE','exp',1,'p_exp_boolean','YAPLUZparser.py',203),
  ('exp -> STRING','exp',1,'p_exp_string','YAPLUZparser.py',211),
  ('exp -> CHAR','exp',1,'p_exp_char','YAPLUZparser.py',215),
  ('exp -> LPAREN exp RPAREN','exp',3,'p_exp_group','YAPLUZparser.py',219),
  ('stmt -> MAKE NAME','stmt',2,'p_makevar','YAPLUZparser.py',224),
  ('stmt -> MAKE NAME EQUAL exp','stmt',4,'p_initvar','YAPLUZparser.py',228),
  ('stmt -> NAME EQUAL exp','stmt',3,'p_assignment','YAPLUZparser.py',232),
  ('stmt -> IF exp THEN stmtblock','stmt',4,'p_if','YAPLUZparser.py',237),
  ('stmt -> IF exp THEN stmtblock elsif ELSE THEN stmtblock','stmt',8,'p_if','YAPLUZparser.py',238),
  ('elsif -> ELIF exp THEN stmtblock elsif','elsif',5,'p_elsif','YAPLUZparser.py',251),
  ('elsif -> <empty>','elsif',0,'p_elsif_empty','YAPLUZparser.py',257),
  ('stmt -> DO stmtblock WHILE exp','stmt',4,'p_stmt_while','YAPLUZparser.py',265),
  ('stmt -> FOR NAME EQUAL exp TO exp UNTIL step stmtblock','stmt',9,'p_stmt_for','YAPLUZparser.py',277),
  ('step -> exp','step',1,'p_step','YAPLUZparser.py',281),
  ('step -> <empty>','step',0,'p_step_empty','YAPLUZparser.py',285),
  ('stmt -> PRINT LPAREN exp RPAREN','stmt',4,'p_stmt_print','YAPLUZparser.py',290),
  ('stmt -> RETURN exp','stmt',2,'p_stmt_return','YAPLUZparser.py',294),
]
