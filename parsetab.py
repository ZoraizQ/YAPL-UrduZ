
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'uzleftDECINCleftORleftANDleftEENEnonassocLTGTGTELTEleftPLUSMINUSleftMULTIPLYDIVIDErightNOTAND BREAK CALL CHAR COMMA COMMENT CONTINUE DEC DIVIDE DO DOT EE ELIF ELSE EQUAL FALSE FLOAT FOR FUNCTION GT GTE IF INC INDEX INT LBRACE LBRACK LPAREN LT LTE MAKE MINUS MODULUS MULTICOMMENT MULTIPLY NAME NE NEWL NOT OR PLUS POP POWER PRINT PUSH RBRACE RBRACK RETURN RPAREN SEMICOL SEP SLICE STRING STRUCT THEN TO TRUE UNTIL WHILE\n    uz : line uz\n    \n    line : stmt SEMICOL\n    uz : error SEMICOL\n    \n    uz :\n     stmtblock : LBRACE stmtS RBRACE stmtblock : LBRACE error RBRACE\n    stmtS : stmt SEMICOL stmtS\n    \n    stmtS : error SEMICOL stmtS\n    \n    stmtS :\n    exp : CALL NAME LPAREN optargs RPARENoptargs : argsoptargs :args : exp COMMA args\n            | exp \n    exp : exp PLUS exp\n        | exp MINUS exp\n        | exp MULTIPLY exp\n        | exp DIVIDE exp\n        | exp POWER exp\n        | exp MODULUS exp\n    \n    exp : exp AND exp\n        | exp OR exp\n        | exp GT exp\n        | exp LT exp\n        | exp GTE exp\n        | exp LTE exp\n        | exp EE exp\n        | exp NE exp\n    exp : NAMElist : LBRACK optargs RBRACKstmt : NAME DOT POP LPAREN exp RPARENstmt : NAME DOT PUSH LPAREN exp RPARENstmt : NAME DOT INDEX LPAREN exp RPARENstmt : NAME DOT SLICE LPAREN exp COMMA exp RPARENstmt : STRUCT NAME SEP structargs SEPstructargs : structexp COMMA structargs\n                  | structexpstructexp : NAME\n                 | NAME EQUAL expstmt : MAKE NAME NAMEstmt : NAME DOT NAME EQUAL expexp : NAME DOT NAME\n    exp : MINUS INT\n        | MINUS FLOAT\n        | INT\n        | FLOAT\n    \n    exp : DEC exp\n        | INC exp\n    \n    stmt : exp DEC\n         | exp INC\n    exp : NOT exp\n    exp : TRUE\n        | FALSE\n    exp : STRINGexp : CHARexp : LPAREN exp RPARENstmt : MAKE NAMEstmt : MAKE NAME EQUAL exp\n            | MAKE NAME EQUAL liststmt : NAME EQUAL exp\n    stmt : IF exp THEN stmtblock\n         | IF exp THEN stmtblock elsif ELSE THEN stmtblock\n    \n    elsif : ELIF exp THEN stmtblock elsif\n    \n    elsif :\n    \n    stmt : BREAK\n    \n    stmt : CONTINUE\n    \n    stmt : DO stmtblock WHILE exp\n    stmt : FOR NAME EQUAL exp TO exp UNTIL step stmtblockstep : expstep : stmt : PRINT LPAREN optargs RPARENstmt : RETURN exp'
    
_lr_action_items = {'error':([0,2,30,57,116,117,],[3,3,-2,93,133,133,]),'$end':([0,1,2,28,29,30,],[-4,0,-4,-1,-3,-2,]),'NAME':([0,2,6,8,9,10,11,12,16,18,19,23,30,31,32,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,57,59,72,87,89,91,95,99,100,101,102,103,104,111,116,117,120,127,129,132,136,142,152,],[5,5,34,51,52,34,34,34,58,34,61,34,-2,65,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,88,5,34,105,106,34,34,34,34,34,34,34,34,34,34,5,5,34,34,106,34,34,34,34,]),'STRUCT':([0,2,30,57,116,117,],[8,8,-2,8,8,8,]),'MAKE':([0,2,30,57,116,117,],[9,9,-2,9,9,9,]),'IF':([0,2,30,57,116,117,],[12,12,-2,12,12,12,]),'BREAK':([0,2,30,57,116,117,],[13,13,-2,13,13,13,]),'CONTINUE':([0,2,30,57,116,117,],[14,14,-2,14,14,14,]),'DO':([0,2,30,57,116,117,],[15,15,-2,15,15,15,]),'FOR':([0,2,30,57,116,117,],[16,16,-2,16,16,16,]),'PRINT':([0,2,30,57,116,117,],[17,17,-2,17,17,17,]),'RETURN':([0,2,30,57,116,117,],[18,18,-2,18,18,18,]),'CALL':([0,2,6,10,11,12,18,23,30,32,37,38,39,40,41,42,43,44,45,46,47,48,49,50,57,59,89,91,95,99,100,101,102,103,104,111,116,117,120,127,132,136,142,152,],[19,19,19,19,19,19,19,19,-2,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'MINUS':([0,2,5,6,7,10,11,12,18,21,22,23,24,25,26,27,30,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,57,59,60,62,63,64,65,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,91,95,98,99,100,101,102,103,104,105,109,111,113,116,117,118,120,122,123,124,125,126,127,132,136,138,142,143,147,148,149,152,156,],[20,20,-29,20,38,20,20,20,20,-45,-46,20,-52,-53,-54,-55,-2,20,38,-29,20,20,20,20,20,20,20,20,20,20,20,20,20,20,38,38,38,20,20,38,-43,-44,-51,-42,38,-56,-15,-16,-17,-18,38,38,38,38,38,38,38,38,38,38,20,20,20,38,20,20,20,20,20,20,-42,38,20,38,20,20,38,20,38,38,38,38,38,20,20,20,-10,20,38,38,38,38,20,38,]),'INT':([0,2,6,10,11,12,18,20,23,30,32,37,38,39,40,41,42,43,44,45,46,47,48,49,50,57,59,89,91,95,99,100,101,102,103,104,111,116,117,120,127,132,136,142,152,],[21,21,21,21,21,21,21,62,21,-2,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'FLOAT':([0,2,6,10,11,12,18,20,23,30,32,37,38,39,40,41,42,43,44,45,46,47,48,49,50,57,59,89,91,95,99,100,101,102,103,104,111,116,117,120,127,132,136,142,152,],[22,22,22,22,22,22,22,63,22,-2,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'DEC':([0,2,5,6,7,10,11,12,18,21,22,23,24,25,26,27,30,32,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,57,59,62,63,64,65,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,91,95,99,100,101,102,103,104,105,111,116,117,120,127,132,136,138,142,152,],[10,10,-29,10,35,10,10,10,10,-45,-46,10,-52,-53,-54,-55,-2,10,-29,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-47,-48,10,10,-43,-44,-51,-42,-56,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,10,10,10,10,10,10,10,10,10,-42,10,10,10,10,10,10,10,-10,10,10,]),'INC':([0,2,5,6,7,10,11,12,18,21,22,23,24,25,26,27,30,32,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,57,59,62,63,64,65,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,91,95,99,100,101,102,103,104,105,111,116,117,120,127,132,136,138,142,152,],[11,11,-29,11,36,11,11,11,11,-45,-46,11,-52,-53,-54,-55,-2,11,-29,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-47,-48,11,11,-43,-44,-51,-42,-56,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,11,11,11,11,11,11,11,11,11,-42,11,11,11,11,11,11,11,-10,11,11,]),'NOT':([0,2,6,10,11,12,18,23,30,32,37,38,39,40,41,42,43,44,45,46,47,48,49,50,57,59,89,91,95,99,100,101,102,103,104,111,116,117,120,127,132,136,142,152,],[23,23,23,23,23,23,23,23,-2,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'TRUE':([0,2,6,10,11,12,18,23,30,32,37,38,39,40,41,42,43,44,45,46,47,48,49,50,57,59,89,91,95,99,100,101,102,103,104,111,116,117,120,127,132,136,142,152,],[24,24,24,24,24,24,24,24,-2,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'FALSE':([0,2,6,10,11,12,18,23,30,32,37,38,39,40,41,42,43,44,45,46,47,48,49,50,57,59,89,91,95,99,100,101,102,103,104,111,116,117,120,127,132,136,142,152,],[25,25,25,25,25,25,25,25,-2,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'STRING':([0,2,6,10,11,12,18,23,30,32,37,38,39,40,41,42,43,44,45,46,47,48,49,50,57,59,89,91,95,99,100,101,102,103,104,111,116,117,120,127,132,136,142,152,],[26,26,26,26,26,26,26,26,-2,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'CHAR':([0,2,6,10,11,12,18,23,30,32,37,38,39,40,41,42,43,44,45,46,47,48,49,50,57,59,89,91,95,99,100,101,102,103,104,111,116,117,120,127,132,136,142,152,],[27,27,27,27,27,27,27,27,-2,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'LPAREN':([0,2,6,10,11,12,17,18,23,30,32,37,38,39,40,41,42,43,44,45,46,47,48,49,50,57,59,61,66,67,68,69,89,91,95,99,100,101,102,103,104,111,116,117,120,127,132,136,142,152,],[6,6,6,6,6,6,59,6,6,-2,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,99,101,102,103,104,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'SEMICOL':([3,4,13,14,21,22,24,25,26,27,34,35,36,52,53,54,60,62,63,64,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,93,94,105,109,110,112,113,114,115,119,122,128,133,138,139,140,141,145,153,154,159,],[29,30,-65,-66,-45,-46,-52,-53,-54,-55,-29,-49,-50,-57,-47,-48,-72,-43,-44,-51,-60,-56,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-40,116,117,-42,-58,-59,-61,-67,-5,-6,-71,-41,-35,116,-10,-31,-32,-33,-30,-34,-62,-68,]),'DOT':([5,34,],[31,72,]),'EQUAL':([5,52,58,65,106,],[32,89,95,100,127,]),'PLUS':([5,7,21,22,24,25,26,27,33,34,53,54,55,60,62,63,64,65,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,98,105,109,113,118,122,123,124,125,126,138,143,147,148,149,156,],[-29,37,-45,-46,-52,-53,-54,-55,37,-29,37,37,37,37,-43,-44,-51,-42,37,-56,-15,-16,-17,-18,37,37,37,37,37,37,37,37,37,37,37,-42,37,37,37,37,37,37,37,37,-10,37,37,37,37,37,]),'MULTIPLY':([5,7,21,22,24,25,26,27,33,34,53,54,55,60,62,63,64,65,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,98,105,109,113,118,122,123,124,125,126,138,143,147,148,149,156,],[-29,39,-45,-46,-52,-53,-54,-55,39,-29,39,39,39,39,-43,-44,-51,-42,39,-56,39,39,-17,-18,39,39,39,39,39,39,39,39,39,39,39,-42,39,39,39,39,39,39,39,39,-10,39,39,39,39,39,]),'DIVIDE':([5,7,21,22,24,25,26,27,33,34,53,54,55,60,62,63,64,65,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,98,105,109,113,118,122,123,124,125,126,138,143,147,148,149,156,],[-29,40,-45,-46,-52,-53,-54,-55,40,-29,40,40,40,40,-43,-44,-51,-42,40,-56,40,40,-17,-18,40,40,40,40,40,40,40,40,40,40,40,-42,40,40,40,40,40,40,40,40,-10,40,40,40,40,40,]),'POWER':([5,7,21,22,24,25,26,27,33,34,53,54,55,60,62,63,64,65,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,98,105,109,113,118,122,123,124,125,126,138,143,147,148,149,156,],[-29,41,-45,-46,-52,-53,-54,-55,41,-29,-47,-48,41,41,-43,-44,-51,-42,41,-56,-15,-16,-17,-18,41,41,-21,-22,-23,-24,-25,-26,-27,-28,41,-42,41,41,41,41,41,41,41,41,-10,41,41,41,41,41,]),'MODULUS':([5,7,21,22,24,25,26,27,33,34,53,54,55,60,62,63,64,65,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,98,105,109,113,118,122,123,124,125,126,138,143,147,148,149,156,],[-29,42,-45,-46,-52,-53,-54,-55,42,-29,-47,-48,42,42,-43,-44,-51,-42,42,-56,-15,-16,-17,-18,42,42,-21,-22,-23,-24,-25,-26,-27,-28,42,-42,42,42,42,42,42,42,42,42,-10,42,42,42,42,42,]),'AND':([5,7,21,22,24,25,26,27,33,34,53,54,55,60,62,63,64,65,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,98,105,109,113,118,122,123,124,125,126,138,143,147,148,149,156,],[-29,43,-45,-46,-52,-53,-54,-55,43,-29,43,43,43,43,-43,-44,-51,-42,43,-56,-15,-16,-17,-18,43,43,-21,43,-23,-24,-25,-26,-27,-28,43,-42,43,43,43,43,43,43,43,43,-10,43,43,43,43,43,]),'OR':([5,7,21,22,24,25,26,27,33,34,53,54,55,60,62,63,64,65,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,98,105,109,113,118,122,123,124,125,126,138,143,147,148,149,156,],[-29,44,-45,-46,-52,-53,-54,-55,44,-29,44,44,44,44,-43,-44,-51,-42,44,-56,-15,-16,-17,-18,44,44,-21,-22,-23,-24,-25,-26,-27,-28,44,-42,44,44,44,44,44,44,44,44,-10,44,44,44,44,44,]),'GT':([5,7,21,22,24,25,26,27,33,34,53,54,55,60,62,63,64,65,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,98,105,109,113,118,122,123,124,125,126,138,143,147,148,149,156,],[-29,45,-45,-46,-52,-53,-54,-55,45,-29,45,45,45,45,-43,-44,-51,-42,45,-56,-15,-16,-17,-18,45,45,45,45,None,None,None,None,45,45,45,-42,45,45,45,45,45,45,45,45,-10,45,45,45,45,45,]),'LT':([5,7,21,22,24,25,26,27,33,34,53,54,55,60,62,63,64,65,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,98,105,109,113,118,122,123,124,125,126,138,143,147,148,149,156,],[-29,46,-45,-46,-52,-53,-54,-55,46,-29,46,46,46,46,-43,-44,-51,-42,46,-56,-15,-16,-17,-18,46,46,46,46,None,None,None,None,46,46,46,-42,46,46,46,46,46,46,46,46,-10,46,46,46,46,46,]),'GTE':([5,7,21,22,24,25,26,27,33,34,53,54,55,60,62,63,64,65,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,98,105,109,113,118,122,123,124,125,126,138,143,147,148,149,156,],[-29,47,-45,-46,-52,-53,-54,-55,47,-29,47,47,47,47,-43,-44,-51,-42,47,-56,-15,-16,-17,-18,47,47,47,47,None,None,None,None,47,47,47,-42,47,47,47,47,47,47,47,47,-10,47,47,47,47,47,]),'LTE':([5,7,21,22,24,25,26,27,33,34,53,54,55,60,62,63,64,65,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,98,105,109,113,118,122,123,124,125,126,138,143,147,148,149,156,],[-29,48,-45,-46,-52,-53,-54,-55,48,-29,48,48,48,48,-43,-44,-51,-42,48,-56,-15,-16,-17,-18,48,48,48,48,None,None,None,None,48,48,48,-42,48,48,48,48,48,48,48,48,-10,48,48,48,48,48,]),'EE':([5,7,21,22,24,25,26,27,33,34,53,54,55,60,62,63,64,65,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,98,105,109,113,118,122,123,124,125,126,138,143,147,148,149,156,],[-29,49,-45,-46,-52,-53,-54,-55,49,-29,49,49,49,49,-43,-44,-51,-42,49,-56,-15,-16,-17,-18,49,49,49,49,-23,-24,-25,-26,-27,-28,49,-42,49,49,49,49,49,49,49,49,-10,49,49,49,49,49,]),'NE':([5,7,21,22,24,25,26,27,33,34,53,54,55,60,62,63,64,65,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,98,105,109,113,118,122,123,124,125,126,138,143,147,148,149,156,],[-29,50,-45,-46,-52,-53,-54,-55,50,-29,50,50,50,50,-43,-44,-51,-42,50,-56,-15,-16,-17,-18,50,50,50,50,-23,-24,-25,-26,-27,-28,50,-42,50,50,50,50,50,50,50,50,-10,50,50,50,50,50,]),'LBRACE':([15,21,22,24,25,26,27,34,53,54,62,63,64,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,90,105,138,150,151,152,156,157,],[57,-45,-46,-52,-53,-54,-55,-29,-47,-48,-43,-44,-51,-56,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,57,-42,-10,57,57,-70,-69,57,]),'RPAREN':([21,22,24,25,26,27,33,34,53,54,59,62,63,64,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,96,97,98,99,105,121,123,124,125,137,138,149,],[-45,-46,-52,-53,-54,-55,71,-29,-47,-48,-12,-43,-44,-51,-56,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,119,-11,-14,-12,-42,138,139,140,141,-13,-10,153,]),'THEN':([21,22,24,25,26,27,34,53,54,55,62,63,64,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,105,138,146,147,],[-45,-46,-52,-53,-54,-55,-29,-47,-48,90,-43,-44,-51,-56,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-42,-10,150,151,]),'COMMA':([21,22,24,25,26,27,34,53,54,62,63,64,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,98,105,106,108,126,138,143,],[-45,-46,-52,-53,-54,-55,-29,-47,-48,-43,-44,-51,-56,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,120,-42,-38,129,142,-10,-39,]),'TO':([21,22,24,25,26,27,34,53,54,62,63,64,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,105,118,138,],[-45,-46,-52,-53,-54,-55,-29,-47,-48,-43,-44,-51,-56,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-42,136,-10,]),'RBRACK':([21,22,24,25,26,27,34,53,54,62,63,64,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,97,98,105,111,130,137,138,],[-45,-46,-52,-53,-54,-55,-29,-47,-48,-43,-44,-51,-56,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-11,-14,-42,-12,145,-13,-10,]),'SEP':([21,22,24,25,26,27,34,51,53,54,62,63,64,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,105,106,107,108,138,143,144,],[-45,-46,-52,-53,-54,-55,-29,87,-47,-48,-43,-44,-51,-56,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-42,-38,128,-37,-10,-39,-36,]),'UNTIL':([21,22,24,25,26,27,34,53,54,62,63,64,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,105,138,148,],[-45,-46,-52,-53,-54,-55,-29,-47,-48,-43,-44,-51,-56,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-42,-10,152,]),'POP':([31,],[66,]),'PUSH':([31,],[67,]),'INDEX':([31,],[68,]),'SLICE':([31,],[69,]),'WHILE':([56,114,115,],[91,-5,-6,]),'RBRACE':([57,92,93,116,117,134,135,],[-9,114,115,-9,-9,-8,-7,]),'LBRACK':([89,],[111,]),'ELIF':([112,114,115,155,],[132,-5,-6,132,]),'ELSE':([112,114,115,131,155,158,],[-64,-5,-6,146,-64,-63,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'uz':([0,2,],[1,28,]),'line':([0,2,],[2,2,]),'stmt':([0,2,57,116,117,],[4,4,94,94,94,]),'exp':([0,2,6,10,11,12,18,23,32,37,38,39,40,41,42,43,44,45,46,47,48,49,50,57,59,89,91,95,99,100,101,102,103,104,111,116,117,120,127,132,136,142,152,],[7,7,33,53,54,55,60,64,70,73,74,75,76,77,78,79,80,81,82,83,84,85,86,7,98,109,113,118,98,122,123,124,125,126,98,7,7,98,143,147,148,149,156,]),'stmtblock':([15,90,150,151,157,],[56,112,154,155,159,]),'stmtS':([57,116,117,],[92,134,135,]),'optargs':([59,99,111,],[96,121,130,]),'args':([59,99,111,120,],[97,97,97,137,]),'structargs':([87,129,],[107,144,]),'structexp':([87,129,],[108,108,]),'list':([89,],[110,]),'elsif':([112,155,],[131,158,]),'step':([152,],[157,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> uz","S'",1,None,None,None),
  ('uz -> line uz','uz',2,'p_uz','YAPLUZparser.py',44),
  ('line -> stmt SEMICOL','line',2,'p_line_stmt','YAPLUZparser.py',50),
  ('uz -> error SEMICOL','uz',2,'p_uz_stmt_error','YAPLUZparser.py',56),
  ('uz -> <empty>','uz',0,'p_uz_empty','YAPLUZparser.py',62),
  ('stmtblock -> LBRACE stmtS RBRACE','stmtblock',3,'p_stmt_block','YAPLUZparser.py',67),
  ('stmtblock -> LBRACE error RBRACE','stmtblock',3,'p_stmt_block_error','YAPLUZparser.py',81),
  ('stmtS -> stmt SEMICOL stmtS','stmtS',3,'p_stmtS','YAPLUZparser.py',86),
  ('stmtS -> error SEMICOL stmtS','stmtS',3,'p_stmtS_error','YAPLUZparser.py',92),
  ('stmtS -> <empty>','stmtS',0,'p_stmtS_empty','YAPLUZparser.py',98),
  ('exp -> CALL NAME LPAREN optargs RPAREN','exp',5,'p_exp_call','YAPLUZparser.py',109),
  ('optargs -> args','optargs',1,'p_optargs','YAPLUZparser.py',113),
  ('optargs -> <empty>','optargs',0,'p_optargs_empty','YAPLUZparser.py',117),
  ('args -> exp COMMA args','args',3,'p_args','YAPLUZparser.py',121),
  ('args -> exp','args',1,'p_args','YAPLUZparser.py',122),
  ('exp -> exp PLUS exp','exp',3,'p_exp_bin','YAPLUZparser.py',130),
  ('exp -> exp MINUS exp','exp',3,'p_exp_bin','YAPLUZparser.py',131),
  ('exp -> exp MULTIPLY exp','exp',3,'p_exp_bin','YAPLUZparser.py',132),
  ('exp -> exp DIVIDE exp','exp',3,'p_exp_bin','YAPLUZparser.py',133),
  ('exp -> exp POWER exp','exp',3,'p_exp_bin','YAPLUZparser.py',134),
  ('exp -> exp MODULUS exp','exp',3,'p_exp_bin','YAPLUZparser.py',135),
  ('exp -> exp AND exp','exp',3,'p_exp_compare','YAPLUZparser.py',141),
  ('exp -> exp OR exp','exp',3,'p_exp_compare','YAPLUZparser.py',142),
  ('exp -> exp GT exp','exp',3,'p_exp_compare','YAPLUZparser.py',143),
  ('exp -> exp LT exp','exp',3,'p_exp_compare','YAPLUZparser.py',144),
  ('exp -> exp GTE exp','exp',3,'p_exp_compare','YAPLUZparser.py',145),
  ('exp -> exp LTE exp','exp',3,'p_exp_compare','YAPLUZparser.py',146),
  ('exp -> exp EE exp','exp',3,'p_exp_compare','YAPLUZparser.py',147),
  ('exp -> exp NE exp','exp',3,'p_exp_compare','YAPLUZparser.py',148),
  ('exp -> NAME','exp',1,'p_exp_name','YAPLUZparser.py',154),
  ('list -> LBRACK optargs RBRACK','list',3,'p_list','YAPLUZparser.py',158),
  ('stmt -> NAME DOT POP LPAREN exp RPAREN','stmt',6,'p_stmt_listpop','YAPLUZparser.py',162),
  ('stmt -> NAME DOT PUSH LPAREN exp RPAREN','stmt',6,'p_stmt_listpush','YAPLUZparser.py',166),
  ('stmt -> NAME DOT INDEX LPAREN exp RPAREN','stmt',6,'p_stmt_listindex','YAPLUZparser.py',170),
  ('stmt -> NAME DOT SLICE LPAREN exp COMMA exp RPAREN','stmt',8,'p_stmt_listslice','YAPLUZparser.py',174),
  ('stmt -> STRUCT NAME SEP structargs SEP','stmt',5,'p_stmt_structcreate','YAPLUZparser.py',178),
  ('structargs -> structexp COMMA structargs','structargs',3,'p_structargs','YAPLUZparser.py',182),
  ('structargs -> structexp','structargs',1,'p_structargs','YAPLUZparser.py',183),
  ('structexp -> NAME','structexp',1,'p_structexp','YAPLUZparser.py',190),
  ('structexp -> NAME EQUAL exp','structexp',3,'p_structexp','YAPLUZparser.py',191),
  ('stmt -> MAKE NAME NAME','stmt',3,'p_stmt_structobj','YAPLUZparser.py',198),
  ('stmt -> NAME DOT NAME EQUAL exp','stmt',5,'p_stmt_structvassign','YAPLUZparser.py',204),
  ('exp -> NAME DOT NAME','exp',3,'p_exp_structvget','YAPLUZparser.py',209),
  ('exp -> MINUS INT','exp',2,'p_exp_num','YAPLUZparser.py',216),
  ('exp -> MINUS FLOAT','exp',2,'p_exp_num','YAPLUZparser.py',217),
  ('exp -> INT','exp',1,'p_exp_num','YAPLUZparser.py',218),
  ('exp -> FLOAT','exp',1,'p_exp_num','YAPLUZparser.py',219),
  ('exp -> DEC exp','exp',2,'p_exp_leftincdec','YAPLUZparser.py',228),
  ('exp -> INC exp','exp',2,'p_exp_leftincdec','YAPLUZparser.py',229),
  ('stmt -> exp DEC','stmt',2,'p_stmt_rightincdec','YAPLUZparser.py',238),
  ('stmt -> exp INC','stmt',2,'p_stmt_rightincdec','YAPLUZparser.py',239),
  ('exp -> NOT exp','exp',2,'p_exp_not','YAPLUZparser.py',247),
  ('exp -> TRUE','exp',1,'p_exp_boolean','YAPLUZparser.py',252),
  ('exp -> FALSE','exp',1,'p_exp_boolean','YAPLUZparser.py',253),
  ('exp -> STRING','exp',1,'p_exp_string','YAPLUZparser.py',261),
  ('exp -> CHAR','exp',1,'p_exp_char','YAPLUZparser.py',265),
  ('exp -> LPAREN exp RPAREN','exp',3,'p_exp_group','YAPLUZparser.py',269),
  ('stmt -> MAKE NAME','stmt',2,'p_makevar','YAPLUZparser.py',274),
  ('stmt -> MAKE NAME EQUAL exp','stmt',4,'p_initvar','YAPLUZparser.py',278),
  ('stmt -> MAKE NAME EQUAL list','stmt',4,'p_initvar','YAPLUZparser.py',279),
  ('stmt -> NAME EQUAL exp','stmt',3,'p_assignment','YAPLUZparser.py',283),
  ('stmt -> IF exp THEN stmtblock','stmt',4,'p_if','YAPLUZparser.py',288),
  ('stmt -> IF exp THEN stmtblock elsif ELSE THEN stmtblock','stmt',8,'p_if','YAPLUZparser.py',289),
  ('elsif -> ELIF exp THEN stmtblock elsif','elsif',5,'p_elsif','YAPLUZparser.py',302),
  ('elsif -> <empty>','elsif',0,'p_elsif_empty','YAPLUZparser.py',308),
  ('stmt -> BREAK','stmt',1,'p_stmt_break','YAPLUZparser.py',314),
  ('stmt -> CONTINUE','stmt',1,'p_stmt_continue','YAPLUZparser.py',320),
  ('stmt -> DO stmtblock WHILE exp','stmt',4,'p_stmt_while','YAPLUZparser.py',327),
  ('stmt -> FOR NAME EQUAL exp TO exp UNTIL step stmtblock','stmt',9,'p_stmt_for','YAPLUZparser.py',339),
  ('step -> exp','step',1,'p_step','YAPLUZparser.py',343),
  ('step -> <empty>','step',0,'p_step_empty','YAPLUZparser.py',347),
  ('stmt -> PRINT LPAREN optargs RPAREN','stmt',4,'p_stmt_print','YAPLUZparser.py',352),
  ('stmt -> RETURN exp','stmt',2,'p_stmt_return','YAPLUZparser.py',356),
]
